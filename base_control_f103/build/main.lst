ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.map_speed,"ax",%progbits
  16              		.align	1
  17              		.global	map_speed
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	map_speed:
  25              	.LVL0:
  26              	.LFB70:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdio.h>
  30:Core/Src/main.c **** #include <string.h>
  31:Core/Src/main.c **** #include "stm32f1xx_it.h"
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 2


  32:Core/Src/main.c **** #include "stm32f103xb.h"
  33:Core/Src/main.c **** #include "stm32f1xx_hal.h"
  34:Core/Src/main.c **** #include "PID.h"
  35:Core/Src/main.c **** #include "config.h"
  36:Core/Src/main.c **** #include "frame_resolve.h"
  37:Core/Src/main.c **** #include "retarget.h"
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** #define FALSE   0
  49:Core/Src/main.c **** #define TRUE    1
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** // #define DEBUG
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PD */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN PM */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE BEGIN PV */
  63:Core/Src/main.c **** // Arrays
  64:Core/Src/main.c **** uint8_t MSG[500] = "Init";
  65:Core/Src/main.c **** uint8_t linear_a[100] = "\n";
  66:Core/Src/main.c **** uint8_t angular_a[100] = "\n";
  67:Core/Src/main.c **** uint8_t rx_buffer[RX_BUFFER_SIZE];
  68:Core/Src/main.c **** uint8_t tx_buffer[TX_BUFFER_SIZE];
  69:Core/Src/main.c **** uint8_t data[8];
  70:Core/Src/main.c **** uint8_t prev_rx, last_rx;
  71:Core/Src/main.c **** // Cross processes values 
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** #ifdef TEST_HARDWARE
  74:Core/Src/main.c **** volatile uint16_t cnt = 0;
  75:Core/Src/main.c **** volatile uint16_t last_cnt = 0;
  76:Core/Src/main.c **** volatile double enc_cnt = 0.0f;
  77:Core/Src/main.c **** volatile double last_enc_cnt = 0.0f;
  78:Core/Src/main.c **** #endif
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** volatile double right_set_speed = 0.0f; // RPM
  81:Core/Src/main.c **** volatile double left_set_speed = 0.0f; // RPM
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** #ifdef ENABLE_PID
  84:Core/Src/main.c **** /* PID Init Variables */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** double right_pid_params[3] = {RIGHT_MOTOR_KP , RIGHT_MOTOR_KI, RIGHT_MOTOR_KD};
  87:Core/Src/main.c **** double left_pid_params[3] = {LEFT_MOTOR_KP , LEFT_MOTOR_KI, LEFT_MOTOR_KD};
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 3


  89:Core/Src/main.c **** // Custom typedef
  90:Core/Src/main.c **** MOTOR_TypeDef str_right_motor;
  91:Core/Src/main.c **** PID_TypeDef str_right_pid;
  92:Core/Src/main.c **** MOTOR_TypeDef str_left_motor;
  93:Core/Src/main.c **** PID_TypeDef str_left_pid;
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** #endif
  96:Core/Src/main.c **** /* Other definitions*/
  97:Core/Src/main.c **** uint8_t ready_flag = FALSE;
  98:Core/Src/main.c **** uint8_t pid_flag = FALSE;
  99:Core/Src/main.c **** volatile uint8_t    vel_update_flag = FALSE;
 100:Core/Src/main.c **** float linear_vel;
 101:Core/Src/main.c **** float angular_vel;
 102:Core/Src/main.c **** float last_l_vel, last_a_vel;
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* USER CODE END PV */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 107:Core/Src/main.c **** void SystemClock_Config(void);
 108:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* USER CODE END PFP */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 113:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* USER CODE END 0 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief  The application entry point.
 119:Core/Src/main.c ****   * @retval int
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** int main(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END 1 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 130:Core/Src/main.c ****   HAL_Init();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END Init */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Configure the system clock */
 137:Core/Src/main.c ****   SystemClock_Config();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END SysInit */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Initialize all configured peripherals */
 144:Core/Src/main.c ****   MX_GPIO_Init();
 145:Core/Src/main.c ****   MX_DMA_Init();
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 4


 146:Core/Src/main.c ****   MX_TIM1_Init();
 147:Core/Src/main.c ****   MX_TIM2_Init();
 148:Core/Src/main.c ****   MX_TIM3_Init();
 149:Core/Src/main.c ****   MX_TIM4_Init();
 150:Core/Src/main.c ****   MX_USART1_UART_Init();
 151:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 152:Core/Src/main.c ****   RetargetInit(&huart1);
 153:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   #ifdef ENABLE_PID
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   PID_MotorInit(&str_right_motor, &str_right_pid, GPIOB, GPIO_PIN_6 , GPIO_PIN_7, 100.0f, 15.0f, &(
 158:Core/Src/main.c ****   PID_MotorInit(&str_left_motor, &str_left_pid, GPIOB, GPIO_PIN_4 , GPIO_PIN_5, 100.0f, 15.0f, &(TI
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   // Start Timer4 for PWM function on channel 3 and channel 4
 161:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 162:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   // Reset PWM Duty Cycle to zero on TIM 4 output channel 3 and channel 4
 165:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_3, 0);
 166:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, 0);
 167:Core/Src/main.c ****   
 168:Core/Src/main.c ****   // Start Timer3 for RIGHT Encoder Interfacing.
 169:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 170:Core/Src/main.c ****   // Start Timer2 for LEFT Encoder Interfacing.
 171:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   // Start Timer1 for control loop interrupt
 174:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   #else 
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   //Test PWM
 179:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 1);
 180:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, 0);
 181:Core/Src/main.c ****   // Start Timer4 for PWM function on channel 3 and channel 4
 182:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 183:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 184:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_3, 30);
 185:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, 30);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   //Test control loop
 188:Core/Src/main.c ****   // Start Timer1 for sampling loop interrupt
 189:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 190:Core/Src/main.c ****   
 191:Core/Src/main.c ****   #endif
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   // Last update time in tick
 194:Core/Src/main.c ****   uint32_t last_update = 0;
 195:Core/Src/main.c ****   /* USER CODE END 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* Infinite loop */
 198:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 199:Core/Src/main.c ****   while (1)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     /* USER CODE END WHILE */
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 5


 203:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 204:Core/Src/main.c ****     #ifdef ENABLE_PID
 205:Core/Src/main.c ****     if (vel_update_flag)
 206:Core/Src/main.c ****     {    
 207:Core/Src/main.c ****         resolveRxFrame(rx_buffer, &linear_vel, &angular_vel);
 208:Core/Src/main.c ****         
 209:Core/Src/main.c ****         // Convert from M/S to RPM
 210:Core/Src/main.c ****         if (linear_vel != last_l_vel || angular_vel != last_a_vel)
 211:Core/Src/main.c ****         {
 212:Core/Src/main.c ****           left_set_speed = ( linear_vel - angular_vel*ROBOT_WHEEL_BASE/2 ) * 60/ ( PI * ROBOT_WHEEL
 213:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 214:Core/Src/main.c ****         }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****         #ifdef DEBUG
 217:Core/Src/main.c ****         if (linear_vel != last_l_vel || angular_vel != last_a_vel)
 218:Core/Src/main.c ****         {
 219:Core/Src/main.c ****             sprintf((char *)MSG, "R: %.5f | L: %.5f \n", right_set_speed, left_set_speed);
 220:Core/Src/main.c ****             HAL_UART_Transmit_DMA(&huart1 ,MSG, sizeof(MSG));
 221:Core/Src/main.c ****         }
 222:Core/Src/main.c ****         // HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_6);
 223:Core/Src/main.c ****         #endif
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****         last_a_vel = angular_vel;
 226:Core/Src/main.c ****         last_l_vel = linear_vel;
 227:Core/Src/main.c ****         vel_update_flag = FALSE;
 228:Core/Src/main.c ****         last_update = HAL_GetTick();
 229:Core/Src/main.c ****     }
 230:Core/Src/main.c ****     #endif
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****     // else 
 233:Core/Src/main.c ****     // {
 234:Core/Src/main.c ****     //     // If update timeout: 2 seconds
 235:Core/Src/main.c ****     //     // Reset speed to avoid overcontrol
 236:Core/Src/main.c ****     //     if ( (HAL_GetTick() - last_update > COMMAND_TIMEOUT_MS) && (angular_vel != 0 || linear_v
 237:Core/Src/main.c ****     //     {
 238:Core/Src/main.c ****     //         angular_vel = 0;
 239:Core/Src/main.c ****     //         linear_vel = 0;
 240:Core/Src/main.c ****     //         #ifdef DEBUG
 241:Core/Src/main.c ****     //         // printf("Vel : %.5f  | %.5f \n", linear_vel, angular_vel);
 242:Core/Src/main.c ****     //         // sprintf((char *)MSG, "L: %.5f | A: %.5f \n", linear_vel, angular_vel);
 243:Core/Src/main.c ****     //         // HAL_UART_Transmit_DMA(&huart1 ,MSG, sizeof(MSG));
 244:Core/Src/main.c ****     //         #endif
 245:Core/Src/main.c ****     //     }
 246:Core/Src/main.c ****     // }
 247:Core/Src/main.c ****     // HAL_Delay(100);
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c ****   /* USER CODE END 3 */
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief System Clock Configuration
 254:Core/Src/main.c ****   * @retval None
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c **** void SystemClock_Config(void)
 257:Core/Src/main.c **** {
 258:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 262:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 271:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 272:Core/Src/main.c ****   {
 273:Core/Src/main.c ****     Error_Handler();
 274:Core/Src/main.c ****   }
 275:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 278:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 279:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 280:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** void map_speed(float a_vel, float l_vel, double *r_set_rpm, double *r_set_lpm)
 293:Core/Src/main.c **** {
  28              		.loc 1 293 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 294:Core/Src/main.c ****     __NOP();
  33              		.loc 1 294 5 view .LVU1
  34              		.syntax unified
  35              	@ 294 "Core/Src/main.c" 1
  36 0000 00BF     		nop
  37              	@ 0 "" 2
 295:Core/Src/main.c **** }
  38              		.loc 1 295 1 is_stmt 0 view .LVU2
  39              		.thumb
  40              		.syntax unified
  41 0002 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE70:
  45              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  46              		.align	1
  47              		.global	HAL_TIM_PeriodElapsedCallback
  48              		.syntax unified
  49              		.thumb
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 7


  50              		.thumb_func
  51              		.fpu softvfp
  53              	HAL_TIM_PeriodElapsedCallback:
  54              	.LVL1:
  55              	.LFB71:
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 299:Core/Src/main.c **** {
  56              		.loc 1 299 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		.loc 1 299 1 is_stmt 0 view .LVU4
  61 0000 38B5     		push	{r3, r4, r5, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 3, -16
  65              		.cfi_offset 4, -12
  66              		.cfi_offset 5, -8
  67              		.cfi_offset 14, -4
 300:Core/Src/main.c ****   if (htim == &htim1)
  68              		.loc 1 300 3 is_stmt 1 view .LVU5
  69              		.loc 1 300 6 is_stmt 0 view .LVU6
  70 0002 0F4B     		ldr	r3, .L6
  71 0004 8342     		cmp	r3, r0
  72 0006 00D0     		beq	.L5
  73              	.LVL2:
  74              	.L2:
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     #ifdef TEST_HARDWARE
 303:Core/Src/main.c ****     // Do sampling and calculate stuff
 304:Core/Src/main.c ****     cnt++;
 305:Core/Src/main.c ****     if (cnt == 100)
 306:Core/Src/main.c ****     {
 307:Core/Src/main.c ****         
 308:Core/Src/main.c ****         enc_cnt = TIM3->CNT;
 309:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_7);
 310:Core/Src/main.c ****         if (enc_cnt!=last_enc_cnt)
 311:Core/Src/main.c ****         {
 312:Core/Src/main.c ****           sprintf((char *)period, "-> %d pulses/sec\n", (enc_cnt-last_enc_cnt));
 313:Core/Src/main.c ****           HAL_UART_Transmit_DMA(&huart1, period, sizeof(period));
 314:Core/Src/main.c ****         }
 315:Core/Src/main.c ****         cnt = 0;
 316:Core/Src/main.c ****         last_enc_cnt = enc_cnt;
 317:Core/Src/main.c ****         
 318:Core/Src/main.c ****     }
 319:Core/Src/main.c ****     #endif
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****     #ifdef ENABLE_PID
 322:Core/Src/main.c ****     /* =================
 323:Core/Src/main.c ****     * MAIN PID CLOSE-LOOP SAMPLING AND COMPUTE
 324:Core/Src/main.c ****     *  =================== */
 325:Core/Src/main.c ****     // RIGHT MOTOR PI CONTROL 
 326:Core/Src/main.c ****     PID_PreProcess(&str_right_motor, right_set_speed);
 327:Core/Src/main.c ****     PID_PreProcess(&str_left_motor, left_set_speed);
 328:Core/Src/main.c ****     PID_ComputeOutput(&str_right_motor);
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 8


 329:Core/Src/main.c ****     PID_ComputeOutput(&str_left_motor);
 330:Core/Src/main.c ****     PID_SetDuty(&str_right_motor );
 331:Core/Src/main.c ****     PID_SetDuty(&str_left_motor );
 332:Core/Src/main.c ****     #else 
 333:Core/Src/main.c ****     static uint32_t counter = 0;
 334:Core/Src/main.c ****     if (counter >= 100)
 335:Core/Src/main.c ****     {
 336:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 337:Core/Src/main.c ****       counter = 0;
 338:Core/Src/main.c ****     }
 339:Core/Src/main.c ****     counter++;  
 340:Core/Src/main.c ****     #endif
 341:Core/Src/main.c ****   }
 342:Core/Src/main.c **** }
  75              		.loc 1 342 1 view .LVU7
  76 0008 38BD     		pop	{r3, r4, r5, pc}
  77              	.LVL3:
  78              	.L5:
 326:Core/Src/main.c ****     PID_PreProcess(&str_left_motor, left_set_speed);
  79              		.loc 1 326 5 is_stmt 1 view .LVU8
  80 000a 0E4D     		ldr	r5, .L6+4
  81 000c 0E4B     		ldr	r3, .L6+8
  82 000e D3E90023 		ldrd	r2, [r3]
  83 0012 2846     		mov	r0, r5
  84              	.LVL4:
 326:Core/Src/main.c ****     PID_PreProcess(&str_left_motor, left_set_speed);
  85              		.loc 1 326 5 is_stmt 0 view .LVU9
  86 0014 FFF7FEFF 		bl	PID_PreProcess
  87              	.LVL5:
 327:Core/Src/main.c ****     PID_ComputeOutput(&str_right_motor);
  88              		.loc 1 327 5 is_stmt 1 view .LVU10
  89 0018 0C4C     		ldr	r4, .L6+12
  90 001a 0D4B     		ldr	r3, .L6+16
  91 001c D3E90023 		ldrd	r2, [r3]
  92 0020 2046     		mov	r0, r4
  93 0022 FFF7FEFF 		bl	PID_PreProcess
  94              	.LVL6:
 328:Core/Src/main.c ****     PID_ComputeOutput(&str_left_motor);
  95              		.loc 1 328 5 view .LVU11
  96 0026 2846     		mov	r0, r5
  97 0028 FFF7FEFF 		bl	PID_ComputeOutput
  98              	.LVL7:
 329:Core/Src/main.c ****     PID_SetDuty(&str_right_motor );
  99              		.loc 1 329 5 view .LVU12
 100 002c 2046     		mov	r0, r4
 101 002e FFF7FEFF 		bl	PID_ComputeOutput
 102              	.LVL8:
 330:Core/Src/main.c ****     PID_SetDuty(&str_left_motor );
 103              		.loc 1 330 5 view .LVU13
 104 0032 2846     		mov	r0, r5
 105 0034 FFF7FEFF 		bl	PID_SetDuty
 106              	.LVL9:
 331:Core/Src/main.c ****     #else 
 107              		.loc 1 331 5 view .LVU14
 108 0038 2046     		mov	r0, r4
 109 003a FFF7FEFF 		bl	PID_SetDuty
 110              	.LVL10:
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 9


 111              		.loc 1 342 1 is_stmt 0 view .LVU15
 112 003e E3E7     		b	.L2
 113              	.L7:
 114              		.align	2
 115              	.L6:
 116 0040 00000000 		.word	htim1
 117 0044 00000000 		.word	.LANCHOR1
 118 0048 00000000 		.word	.LANCHOR0
 119 004c 00000000 		.word	.LANCHOR3
 120 0050 00000000 		.word	.LANCHOR2
 121              		.cfi_endproc
 122              	.LFE71:
 124              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 125              		.align	1
 126              		.global	HAL_UART_RxCpltCallback
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	HAL_UART_RxCpltCallback:
 133              	.LVL11:
 134              	.LFB72:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 346:Core/Src/main.c **** {
 135              		.loc 1 346 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 346 1 is_stmt 0 view .LVU17
 140 0000 08B5     		push	{r3, lr}
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 3, -8
 144              		.cfi_offset 14, -4
 347:Core/Src/main.c ****     
 348:Core/Src/main.c ****     if (ready_flag == TRUE)
 145              		.loc 1 348 5 is_stmt 1 view .LVU18
 146              		.loc 1 348 20 is_stmt 0 view .LVU19
 147 0002 1B4B     		ldr	r3, .L15
 148 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 149              		.loc 1 348 8 view .LVU20
 150 0006 012B     		cmp	r3, #1
 151 0008 14D0     		beq	.L13
 349:Core/Src/main.c ****     {
 350:Core/Src/main.c ****         vel_update_flag = TRUE;
 351:Core/Src/main.c ****         ready_flag = FALSE;
 352:Core/Src/main.c ****         HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 353:Core/Src/main.c ****     }
 354:Core/Src/main.c ****     else
 355:Core/Src/main.c ****     {
 356:Core/Src/main.c ****         if (rx_buffer[0] == 0x16 && prev_rx == 0x16 && last_rx == 0x16) // SYN
 152              		.loc 1 356 9 is_stmt 1 view .LVU21
 153              		.loc 1 356 22 is_stmt 0 view .LVU22
 154 000a 1A4B     		ldr	r3, .L15+4
 155 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 10


 156              		.loc 1 356 12 view .LVU23
 157 000e 162B     		cmp	r3, #22
 158 0010 03D1     		bne	.L11
 159              		.loc 1 356 45 discriminator 1 view .LVU24
 160 0012 194B     		ldr	r3, .L15+8
 161 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 162              		.loc 1 356 34 discriminator 1 view .LVU25
 163 0016 162B     		cmp	r3, #22
 164 0018 17D0     		beq	.L14
 165              	.L11:
 357:Core/Src/main.c ****         {
 358:Core/Src/main.c ****             ready_flag = TRUE;
 359:Core/Src/main.c ****             memset(rx_buffer, 0, RX_BUFFER_SIZE);
 360:Core/Src/main.c ****             HAL_UART_Receive_DMA(&huart1, rx_buffer, RX_BUFFER_SIZE);   
 361:Core/Src/main.c ****         }
 362:Core/Src/main.c ****         else
 363:Core/Src/main.c ****         {
 364:Core/Src/main.c ****             HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 166              		.loc 1 364 13 is_stmt 1 view .LVU26
 167 001a 0122     		movs	r2, #1
 168 001c 1549     		ldr	r1, .L15+4
 169 001e 1748     		ldr	r0, .L15+12
 170              	.LVL12:
 171              		.loc 1 364 13 is_stmt 0 view .LVU27
 172 0020 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 173              	.LVL13:
 174              	.L10:
 365:Core/Src/main.c ****         }
 366:Core/Src/main.c ****     } 
 367:Core/Src/main.c ****     last_rx = prev_rx;
 175              		.loc 1 367 5 is_stmt 1 view .LVU28
 176              		.loc 1 367 13 is_stmt 0 view .LVU29
 177 0024 144B     		ldr	r3, .L15+8
 178 0026 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 179 0028 154A     		ldr	r2, .L15+16
 180 002a 1170     		strb	r1, [r2]
 368:Core/Src/main.c ****     prev_rx = rx_buffer[0];
 181              		.loc 1 368 5 is_stmt 1 view .LVU30
 182              		.loc 1 368 24 is_stmt 0 view .LVU31
 183 002c 114A     		ldr	r2, .L15+4
 184 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 185              		.loc 1 368 13 view .LVU32
 186 0030 1A70     		strb	r2, [r3]
 369:Core/Src/main.c **** }
 187              		.loc 1 369 1 view .LVU33
 188 0032 08BD     		pop	{r3, pc}
 189              	.LVL14:
 190              	.L13:
 350:Core/Src/main.c ****         ready_flag = FALSE;
 191              		.loc 1 350 9 is_stmt 1 view .LVU34
 350:Core/Src/main.c ****         ready_flag = FALSE;
 192              		.loc 1 350 25 is_stmt 0 view .LVU35
 193 0034 0122     		movs	r2, #1
 194 0036 134B     		ldr	r3, .L15+20
 195 0038 1A70     		strb	r2, [r3]
 351:Core/Src/main.c ****         HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 196              		.loc 1 351 9 is_stmt 1 view .LVU36
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 11


 351:Core/Src/main.c ****         HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 197              		.loc 1 351 20 is_stmt 0 view .LVU37
 198 003a 0D4B     		ldr	r3, .L15
 199 003c 0021     		movs	r1, #0
 200 003e 1970     		strb	r1, [r3]
 352:Core/Src/main.c ****     }
 201              		.loc 1 352 9 is_stmt 1 view .LVU38
 202 0040 0C49     		ldr	r1, .L15+4
 203 0042 0E48     		ldr	r0, .L15+12
 204              	.LVL15:
 352:Core/Src/main.c ****     }
 205              		.loc 1 352 9 is_stmt 0 view .LVU39
 206 0044 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 207              	.LVL16:
 208 0048 ECE7     		b	.L10
 209              	.LVL17:
 210              	.L14:
 356:Core/Src/main.c ****         {
 211              		.loc 1 356 64 discriminator 2 view .LVU40
 212 004a 0D4B     		ldr	r3, .L15+16
 213 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356:Core/Src/main.c ****         {
 214              		.loc 1 356 53 discriminator 2 view .LVU41
 215 004e 162B     		cmp	r3, #22
 216 0050 E3D1     		bne	.L11
 358:Core/Src/main.c ****             memset(rx_buffer, 0, RX_BUFFER_SIZE);
 217              		.loc 1 358 13 is_stmt 1 view .LVU42
 358:Core/Src/main.c ****             memset(rx_buffer, 0, RX_BUFFER_SIZE);
 218              		.loc 1 358 24 is_stmt 0 view .LVU43
 219 0052 074B     		ldr	r3, .L15
 220 0054 0122     		movs	r2, #1
 221 0056 1A70     		strb	r2, [r3]
 359:Core/Src/main.c ****             HAL_UART_Receive_DMA(&huart1, rx_buffer, RX_BUFFER_SIZE);   
 222              		.loc 1 359 13 is_stmt 1 view .LVU44
 223 0058 0649     		ldr	r1, .L15+4
 224 005a 0023     		movs	r3, #0
 225 005c 0B60     		str	r3, [r1]
 226 005e 4B60     		str	r3, [r1, #4]
 227 0060 8B60     		str	r3, [r1, #8]
 228 0062 CB60     		str	r3, [r1, #12]
 360:Core/Src/main.c ****         }
 229              		.loc 1 360 13 view .LVU45
 230 0064 1022     		movs	r2, #16
 231 0066 0548     		ldr	r0, .L15+12
 232              	.LVL18:
 360:Core/Src/main.c ****         }
 233              		.loc 1 360 13 is_stmt 0 view .LVU46
 234 0068 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 235              	.LVL19:
 236 006c DAE7     		b	.L10
 237              	.L16:
 238 006e 00BF     		.align	2
 239              	.L15:
 240 0070 00000000 		.word	.LANCHOR4
 241 0074 00000000 		.word	.LANCHOR6
 242 0078 00000000 		.word	.LANCHOR7
 243 007c 00000000 		.word	huart1
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 12


 244 0080 00000000 		.word	.LANCHOR8
 245 0084 00000000 		.word	.LANCHOR5
 246              		.cfi_endproc
 247              	.LFE72:
 249              		.section	.text.Error_Handler,"ax",%progbits
 250              		.align	1
 251              		.global	Error_Handler
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	Error_Handler:
 258              	.LFB73:
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** /* USER CODE END 4 */
 373:Core/Src/main.c **** 
 374:Core/Src/main.c **** /**
 375:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 376:Core/Src/main.c ****   * @retval None
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c **** void Error_Handler(void)
 379:Core/Src/main.c **** {
 259              		.loc 1 379 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ Volatile: function does not return.
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 380:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 381:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 382:Core/Src/main.c ****   __disable_irq();
 265              		.loc 1 382 3 view .LVU48
 266              	.LBB4:
 267              	.LBI4:
 268              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 13


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 14


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 15


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 269              		.loc 2 140 27 view .LVU49
 270              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 271              		.loc 2 142 3 view .LVU50
 272              		.syntax unified
 273              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 274 0000 72B6     		cpsid i
 275              	@ 0 "" 2
 276              		.thumb
 277              		.syntax unified
 278              	.L18:
 279              	.LBE5:
 280              	.LBE4:
 383:Core/Src/main.c ****   while (1)
 281              		.loc 1 383 3 discriminator 1 view .LVU51
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****   }
 282              		.loc 1 385 3 discriminator 1 view .LVU52
 383:Core/Src/main.c ****   while (1)
 283              		.loc 1 383 9 discriminator 1 view .LVU53
 284 0002 FEE7     		b	.L18
 285              		.cfi_endproc
 286              	.LFE73:
 288              		.section	.text.SystemClock_Config,"ax",%progbits
 289              		.align	1
 290              		.global	SystemClock_Config
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	SystemClock_Config:
 297              	.LFB69:
 257:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 298              		.loc 1 257 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 64
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 00B5     		push	{lr}
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 14, -4
 306 0002 91B0     		sub	sp, sp, #68
 307              	.LCFI3:
 308              		.cfi_def_cfa_offset 72
 258:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 309              		.loc 1 258 3 view .LVU55
 258:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 310              		.loc 1 258 22 is_stmt 0 view .LVU56
 311 0004 2822     		movs	r2, #40
 312 0006 0021     		movs	r1, #0
 313 0008 06A8     		add	r0, sp, #24
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 16


 314 000a FFF7FEFF 		bl	memset
 315              	.LVL20:
 259:Core/Src/main.c **** 
 316              		.loc 1 259 3 is_stmt 1 view .LVU57
 259:Core/Src/main.c **** 
 317              		.loc 1 259 22 is_stmt 0 view .LVU58
 318 000e 0023     		movs	r3, #0
 319 0010 0193     		str	r3, [sp, #4]
 320 0012 0293     		str	r3, [sp, #8]
 321 0014 0393     		str	r3, [sp, #12]
 322 0016 0493     		str	r3, [sp, #16]
 323 0018 0593     		str	r3, [sp, #20]
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 324              		.loc 1 264 3 is_stmt 1 view .LVU59
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 325              		.loc 1 264 36 is_stmt 0 view .LVU60
 326 001a 0122     		movs	r2, #1
 327 001c 0692     		str	r2, [sp, #24]
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 328              		.loc 1 265 3 is_stmt 1 view .LVU61
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 329              		.loc 1 265 30 is_stmt 0 view .LVU62
 330 001e 4FF48033 		mov	r3, #65536
 331 0022 0793     		str	r3, [sp, #28]
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 332              		.loc 1 266 3 is_stmt 1 view .LVU63
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 333              		.loc 1 267 3 view .LVU64
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 334              		.loc 1 267 30 is_stmt 0 view .LVU65
 335 0024 0A92     		str	r2, [sp, #40]
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 336              		.loc 1 268 3 is_stmt 1 view .LVU66
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 337              		.loc 1 268 34 is_stmt 0 view .LVU67
 338 0026 0222     		movs	r2, #2
 339 0028 0D92     		str	r2, [sp, #52]
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 340              		.loc 1 269 3 is_stmt 1 view .LVU68
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 341              		.loc 1 269 35 is_stmt 0 view .LVU69
 342 002a 0E93     		str	r3, [sp, #56]
 270:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 343              		.loc 1 270 3 is_stmt 1 view .LVU70
 270:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 344              		.loc 1 270 32 is_stmt 0 view .LVU71
 345 002c 4FF4E013 		mov	r3, #1835008
 346 0030 0F93     		str	r3, [sp, #60]
 271:Core/Src/main.c ****   {
 347              		.loc 1 271 3 is_stmt 1 view .LVU72
 271:Core/Src/main.c ****   {
 348              		.loc 1 271 7 is_stmt 0 view .LVU73
 349 0032 06A8     		add	r0, sp, #24
 350 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 351              	.LVL21:
 271:Core/Src/main.c ****   {
 352              		.loc 1 271 6 view .LVU74
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 17


 353 0038 80B9     		cbnz	r0, .L23
 277:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 354              		.loc 1 277 3 is_stmt 1 view .LVU75
 277:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 355              		.loc 1 277 31 is_stmt 0 view .LVU76
 356 003a 0F23     		movs	r3, #15
 357 003c 0193     		str	r3, [sp, #4]
 279:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 358              		.loc 1 279 3 is_stmt 1 view .LVU77
 279:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 359              		.loc 1 279 34 is_stmt 0 view .LVU78
 360 003e 0221     		movs	r1, #2
 361 0040 0291     		str	r1, [sp, #8]
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 362              		.loc 1 280 3 is_stmt 1 view .LVU79
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 363              		.loc 1 280 35 is_stmt 0 view .LVU80
 364 0042 0023     		movs	r3, #0
 365 0044 0393     		str	r3, [sp, #12]
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 366              		.loc 1 281 3 is_stmt 1 view .LVU81
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 367              		.loc 1 281 36 is_stmt 0 view .LVU82
 368 0046 4FF48062 		mov	r2, #1024
 369 004a 0492     		str	r2, [sp, #16]
 282:Core/Src/main.c **** 
 370              		.loc 1 282 3 is_stmt 1 view .LVU83
 282:Core/Src/main.c **** 
 371              		.loc 1 282 36 is_stmt 0 view .LVU84
 372 004c 0593     		str	r3, [sp, #20]
 284:Core/Src/main.c ****   {
 373              		.loc 1 284 3 is_stmt 1 view .LVU85
 284:Core/Src/main.c ****   {
 374              		.loc 1 284 7 is_stmt 0 view .LVU86
 375 004e 01A8     		add	r0, sp, #4
 376 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 377              	.LVL22:
 284:Core/Src/main.c ****   {
 378              		.loc 1 284 6 view .LVU87
 379 0054 20B9     		cbnz	r0, .L24
 288:Core/Src/main.c **** 
 380              		.loc 1 288 1 view .LVU88
 381 0056 11B0     		add	sp, sp, #68
 382              	.LCFI4:
 383              		.cfi_remember_state
 384              		.cfi_def_cfa_offset 4
 385              		@ sp needed
 386 0058 5DF804FB 		ldr	pc, [sp], #4
 387              	.L23:
 388              	.LCFI5:
 389              		.cfi_restore_state
 273:Core/Src/main.c ****   }
 390              		.loc 1 273 5 is_stmt 1 view .LVU89
 391 005c FFF7FEFF 		bl	Error_Handler
 392              	.LVL23:
 393              	.L24:
 286:Core/Src/main.c ****   }
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 18


 394              		.loc 1 286 5 view .LVU90
 395 0060 FFF7FEFF 		bl	Error_Handler
 396              	.LVL24:
 397              		.cfi_endproc
 398              	.LFE69:
 400              		.global	__aeabi_fcmpeq
 401              		.global	__aeabi_fmul
 402              		.global	__aeabi_fsub
 403              		.global	__aeabi_f2d
 404              		.global	__aeabi_ddiv
 405              		.global	__aeabi_fadd
 406              		.section	.text.main,"ax",%progbits
 407              		.align	1
 408              		.global	main
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu softvfp
 414              	main:
 415              	.LFB68:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 416              		.loc 1 122 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 421              	.LCFI6:
 422              		.cfi_def_cfa_offset 28
 423              		.cfi_offset 4, -28
 424              		.cfi_offset 5, -24
 425              		.cfi_offset 6, -20
 426              		.cfi_offset 7, -16
 427              		.cfi_offset 8, -12
 428              		.cfi_offset 9, -8
 429              		.cfi_offset 14, -4
 430 0004 8BB0     		sub	sp, sp, #44
 431              	.LCFI7:
 432              		.cfi_def_cfa_offset 72
 130:Core/Src/main.c **** 
 433              		.loc 1 130 3 view .LVU92
 434 0006 FFF7FEFF 		bl	HAL_Init
 435              	.LVL25:
 137:Core/Src/main.c **** 
 436              		.loc 1 137 3 view .LVU93
 437 000a FFF7FEFF 		bl	SystemClock_Config
 438              	.LVL26:
 144:Core/Src/main.c ****   MX_DMA_Init();
 439              		.loc 1 144 3 view .LVU94
 440 000e FFF7FEFF 		bl	MX_GPIO_Init
 441              	.LVL27:
 145:Core/Src/main.c ****   MX_TIM1_Init();
 442              		.loc 1 145 3 view .LVU95
 443 0012 FFF7FEFF 		bl	MX_DMA_Init
 444              	.LVL28:
 146:Core/Src/main.c ****   MX_TIM2_Init();
 445              		.loc 1 146 3 view .LVU96
 446 0016 FFF7FEFF 		bl	MX_TIM1_Init
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 19


 447              	.LVL29:
 147:Core/Src/main.c ****   MX_TIM3_Init();
 448              		.loc 1 147 3 view .LVU97
 449 001a FFF7FEFF 		bl	MX_TIM2_Init
 450              	.LVL30:
 148:Core/Src/main.c ****   MX_TIM4_Init();
 451              		.loc 1 148 3 view .LVU98
 452 001e FFF7FEFF 		bl	MX_TIM3_Init
 453              	.LVL31:
 149:Core/Src/main.c ****   MX_USART1_UART_Init();
 454              		.loc 1 149 3 view .LVU99
 455 0022 FFF7FEFF 		bl	MX_TIM4_Init
 456              	.LVL32:
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 457              		.loc 1 150 3 view .LVU100
 458 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 459              	.LVL33:
 152:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 460              		.loc 1 152 3 view .LVU101
 461 002a 534C     		ldr	r4, .L32+8
 462 002c 2046     		mov	r0, r4
 463 002e FFF7FEFF 		bl	RetargetInit
 464              	.LVL34:
 153:Core/Src/main.c **** 
 465              		.loc 1 153 3 view .LVU102
 466 0032 0122     		movs	r2, #1
 467 0034 5149     		ldr	r1, .L32+12
 468 0036 2046     		mov	r0, r4
 469 0038 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 470              	.LVL35:
 157:Core/Src/main.c ****   PID_MotorInit(&str_left_motor, &str_left_pid, GPIOB, GPIO_PIN_4 , GPIO_PIN_5, 100.0f, 15.0f, &(TI
 471              		.loc 1 157 3 view .LVU103
 472 003c 504C     		ldr	r4, .L32+16
 473 003e 514B     		ldr	r3, .L32+20
 474 0040 0893     		str	r3, [sp, #32]
 475 0042 514B     		ldr	r3, .L32+24
 476 0044 0793     		str	r3, [sp, #28]
 477 0046 A3F58363 		sub	r3, r3, #1048
 478 004a 0693     		str	r3, [sp, #24]
 479 004c 4FF00008 		mov	r8, #0
 480 0050 DFF83891 		ldr	r9, .L32+28
 481 0054 CDE90489 		strd	r8, [sp, #16]
 482 0058 0026     		movs	r6, #0
 483 005a 4D4F     		ldr	r7, .L32+32
 484 005c CDE90267 		strd	r6, [sp, #8]
 485 0060 8023     		movs	r3, #128
 486 0062 0093     		str	r3, [sp]
 487 0064 4023     		movs	r3, #64
 488 0066 2246     		mov	r2, r4
 489 0068 4A49     		ldr	r1, .L32+36
 490 006a 4B48     		ldr	r0, .L32+40
 491 006c FFF7FEFF 		bl	PID_MotorInit
 492              	.LVL36:
 158:Core/Src/main.c **** 
 493              		.loc 1 158 3 view .LVU104
 494 0070 4A4B     		ldr	r3, .L32+44
 495 0072 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 20


 496 0074 4A4B     		ldr	r3, .L32+48
 497 0076 0793     		str	r3, [sp, #28]
 498 0078 A3F61C03 		subw	r3, r3, #2076
 499 007c 0693     		str	r3, [sp, #24]
 500 007e CDE90489 		strd	r8, [sp, #16]
 501 0082 CDE90267 		strd	r6, [sp, #8]
 502 0086 2023     		movs	r3, #32
 503 0088 0093     		str	r3, [sp]
 504 008a 1023     		movs	r3, #16
 505 008c 2246     		mov	r2, r4
 506 008e 4549     		ldr	r1, .L32+52
 507 0090 4548     		ldr	r0, .L32+56
 508 0092 FFF7FEFF 		bl	PID_MotorInit
 509              	.LVL37:
 161:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 510              		.loc 1 161 3 view .LVU105
 511 0096 454C     		ldr	r4, .L32+60
 512 0098 0821     		movs	r1, #8
 513 009a 2046     		mov	r0, r4
 514 009c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 515              	.LVL38:
 162:Core/Src/main.c **** 
 516              		.loc 1 162 3 view .LVU106
 517 00a0 0C21     		movs	r1, #12
 518 00a2 2046     		mov	r0, r4
 519 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 520              	.LVL39:
 165:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, 0);
 521              		.loc 1 165 3 view .LVU107
 522 00a8 2368     		ldr	r3, [r4]
 523 00aa 0022     		movs	r2, #0
 524 00ac DA63     		str	r2, [r3, #60]
 166:Core/Src/main.c ****   
 525              		.loc 1 166 3 view .LVU108
 526 00ae 1A64     		str	r2, [r3, #64]
 169:Core/Src/main.c ****   // Start Timer2 for LEFT Encoder Interfacing.
 527              		.loc 1 169 3 view .LVU109
 528 00b0 3C21     		movs	r1, #60
 529 00b2 3F48     		ldr	r0, .L32+64
 530 00b4 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 531              	.LVL40:
 171:Core/Src/main.c **** 
 532              		.loc 1 171 3 view .LVU110
 533 00b8 3C21     		movs	r1, #60
 534 00ba 3E48     		ldr	r0, .L32+68
 535 00bc FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 536              	.LVL41:
 174:Core/Src/main.c **** 
 537              		.loc 1 174 3 view .LVU111
 538 00c0 3D48     		ldr	r0, .L32+72
 539 00c2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 540              	.LVL42:
 194:Core/Src/main.c ****   /* USER CODE END 2 */
 541              		.loc 1 194 3 view .LVU112
 194:Core/Src/main.c ****   /* USER CODE END 2 */
 542              		.loc 1 194 3 is_stmt 0 view .LVU113
 543 00c6 36E0     		b	.L26
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 21


 544              	.LVL43:
 545              	.L27:
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 546              		.loc 1 212 11 is_stmt 1 view .LVU114
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 547              		.loc 1 212 54 is_stmt 0 view .LVU115
 548 00c8 3C49     		ldr	r1, .L32+76
 549 00ca 3D4B     		ldr	r3, .L32+80
 550 00cc 1868     		ldr	r0, [r3]	@ float
 551 00ce FFF7FEFF 		bl	__aeabi_fmul
 552              	.LVL44:
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 553              		.loc 1 212 71 view .LVU116
 554 00d2 4FF07C51 		mov	r1, #1056964608
 555 00d6 FFF7FEFF 		bl	__aeabi_fmul
 556              	.LVL45:
 557 00da 0546     		mov	r5, r0
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 558              		.loc 1 212 41 view .LVU117
 559 00dc 0146     		mov	r1, r0
 560 00de 2046     		mov	r0, r4
 561 00e0 FFF7FEFF 		bl	__aeabi_fsub
 562              	.LVL46:
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 563              		.loc 1 212 76 view .LVU118
 564 00e4 3749     		ldr	r1, .L32+84
 565 00e6 FFF7FEFF 		bl	__aeabi_fmul
 566              	.LVL47:
 567 00ea FFF7FEFF 		bl	__aeabi_f2d
 568              	.LVL48:
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 569              		.loc 1 212 80 view .LVU119
 570 00ee 20A3     		adr	r3, .L32
 571 00f0 D3E90023 		ldrd	r2, [r3]
 572 00f4 FFF7FEFF 		bl	__aeabi_ddiv
 573              	.LVL49:
 212:Core/Src/main.c ****           right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL
 574              		.loc 1 212 26 view .LVU120
 575 00f8 334B     		ldr	r3, .L32+88
 576 00fa C3E90001 		strd	r0, [r3]
 213:Core/Src/main.c ****         }
 577              		.loc 1 213 11 is_stmt 1 view .LVU121
 213:Core/Src/main.c ****         }
 578              		.loc 1 213 42 is_stmt 0 view .LVU122
 579 00fe 2946     		mov	r1, r5
 580 0100 2046     		mov	r0, r4
 581 0102 FFF7FEFF 		bl	__aeabi_fadd
 582              	.LVL50:
 213:Core/Src/main.c ****         }
 583              		.loc 1 213 76 view .LVU123
 584 0106 2F49     		ldr	r1, .L32+84
 585 0108 FFF7FEFF 		bl	__aeabi_fmul
 586              	.LVL51:
 587 010c FFF7FEFF 		bl	__aeabi_f2d
 588              	.LVL52:
 213:Core/Src/main.c ****         }
 589              		.loc 1 213 80 view .LVU124
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 22


 590 0110 17A3     		adr	r3, .L32
 591 0112 D3E90023 		ldrd	r2, [r3]
 592 0116 FFF7FEFF 		bl	__aeabi_ddiv
 593              	.LVL53:
 213:Core/Src/main.c ****         }
 594              		.loc 1 213 27 view .LVU125
 595 011a 2C4B     		ldr	r3, .L32+92
 596 011c C3E90001 		strd	r0, [r3]
 597              	.L28:
 225:Core/Src/main.c ****         last_l_vel = linear_vel;
 598              		.loc 1 225 9 is_stmt 1 view .LVU126
 225:Core/Src/main.c ****         last_l_vel = linear_vel;
 599              		.loc 1 225 20 is_stmt 0 view .LVU127
 600 0120 274B     		ldr	r3, .L32+80
 601 0122 1A68     		ldr	r2, [r3]	@ float
 602 0124 2A4B     		ldr	r3, .L32+96
 603 0126 1A60     		str	r2, [r3]	@ float
 226:Core/Src/main.c ****         vel_update_flag = FALSE;
 604              		.loc 1 226 9 is_stmt 1 view .LVU128
 226:Core/Src/main.c ****         vel_update_flag = FALSE;
 605              		.loc 1 226 20 is_stmt 0 view .LVU129
 606 0128 2A4B     		ldr	r3, .L32+100
 607 012a 1C60     		str	r4, [r3]	@ float
 227:Core/Src/main.c ****         last_update = HAL_GetTick();
 608              		.loc 1 227 9 is_stmt 1 view .LVU130
 227:Core/Src/main.c ****         last_update = HAL_GetTick();
 609              		.loc 1 227 25 is_stmt 0 view .LVU131
 610 012c 2A4B     		ldr	r3, .L32+104
 611 012e 0022     		movs	r2, #0
 612 0130 1A70     		strb	r2, [r3]
 228:Core/Src/main.c ****     }
 613              		.loc 1 228 9 is_stmt 1 view .LVU132
 228:Core/Src/main.c ****     }
 614              		.loc 1 228 23 is_stmt 0 view .LVU133
 615 0132 FFF7FEFF 		bl	HAL_GetTick
 616              	.LVL54:
 617              	.L26:
 199:Core/Src/main.c ****   {
 618              		.loc 1 199 3 is_stmt 1 view .LVU134
 205:Core/Src/main.c ****     {    
 619              		.loc 1 205 5 view .LVU135
 205:Core/Src/main.c ****     {    
 620              		.loc 1 205 9 is_stmt 0 view .LVU136
 621 0136 284B     		ldr	r3, .L32+104
 622 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 205:Core/Src/main.c ****     {    
 623              		.loc 1 205 8 view .LVU137
 624 013a 002B     		cmp	r3, #0
 625 013c FBD0     		beq	.L26
 207:Core/Src/main.c ****         
 626              		.loc 1 207 9 is_stmt 1 view .LVU138
 627 013e 274C     		ldr	r4, .L32+108
 628 0140 1F4A     		ldr	r2, .L32+80
 629 0142 2146     		mov	r1, r4
 630 0144 0D48     		ldr	r0, .L32+12
 631 0146 FFF7FEFF 		bl	resolveRxFrame
 632              	.LVL55:
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 23


 210:Core/Src/main.c ****         {
 633              		.loc 1 210 9 view .LVU139
 210:Core/Src/main.c ****         {
 634              		.loc 1 210 24 is_stmt 0 view .LVU140
 635 014a 2468     		ldr	r4, [r4]	@ float
 210:Core/Src/main.c ****         {
 636              		.loc 1 210 12 view .LVU141
 637 014c 214B     		ldr	r3, .L32+100
 638 014e 1968     		ldr	r1, [r3]	@ float
 639 0150 2046     		mov	r0, r4
 640 0152 FFF7FEFF 		bl	__aeabi_fcmpeq
 641              	.LVL56:
 642 0156 0028     		cmp	r0, #0
 643 0158 B6D0     		beq	.L27
 210:Core/Src/main.c ****         {
 644              		.loc 1 210 38 discriminator 1 view .LVU142
 645 015a 1D4B     		ldr	r3, .L32+96
 646 015c 1968     		ldr	r1, [r3]	@ float
 647 015e 184B     		ldr	r3, .L32+80
 648 0160 1868     		ldr	r0, [r3]	@ float
 649 0162 FFF7FEFF 		bl	__aeabi_fcmpeq
 650              	.LVL57:
 651 0166 0028     		cmp	r0, #0
 652 0168 DAD1     		bne	.L28
 653 016a ADE7     		b	.L27
 654              	.L33:
 655 016c AFF30080 		.align	3
 656              	.L32:
 657 0170 DCE14F3D 		.word	1028645340
 658 0174 5723CA3F 		.word	1070211927
 659 0178 00000000 		.word	huart1
 660 017c 00000000 		.word	.LANCHOR6
 661 0180 000C0140 		.word	1073810432
 662 0184 00000000 		.word	.LANCHOR10
 663 0188 3C080040 		.word	1073743932
 664 018c 00002E40 		.word	1076756480
 665 0190 00005940 		.word	1079574528
 666 0194 00000000 		.word	.LANCHOR9
 667 0198 00000000 		.word	.LANCHOR1
 668 019c 00000000 		.word	.LANCHOR12
 669 01a0 40080040 		.word	1073743936
 670 01a4 00000000 		.word	.LANCHOR11
 671 01a8 00000000 		.word	.LANCHOR3
 672 01ac 00000000 		.word	htim4
 673 01b0 00000000 		.word	htim3
 674 01b4 00000000 		.word	htim2
 675 01b8 00000000 		.word	htim1
 676 01bc 85EB513E 		.word	1045556101
 677 01c0 00000000 		.word	.LANCHOR13
 678 01c4 00007042 		.word	1114636288
 679 01c8 00000000 		.word	.LANCHOR2
 680 01cc 00000000 		.word	.LANCHOR0
 681 01d0 00000000 		.word	.LANCHOR16
 682 01d4 00000000 		.word	.LANCHOR15
 683 01d8 00000000 		.word	.LANCHOR5
 684 01dc 00000000 		.word	.LANCHOR14
 685              		.cfi_endproc
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 24


 686              	.LFE68:
 688              		.global	last_a_vel
 689              		.global	last_l_vel
 690              		.global	angular_vel
 691              		.global	linear_vel
 692              		.global	vel_update_flag
 693              		.global	pid_flag
 694              		.global	ready_flag
 695              		.global	str_left_pid
 696              		.global	str_left_motor
 697              		.global	str_right_pid
 698              		.global	str_right_motor
 699              		.global	left_pid_params
 700              		.global	right_pid_params
 701              		.global	left_set_speed
 702              		.global	right_set_speed
 703              		.global	last_rx
 704              		.global	prev_rx
 705              		.global	data
 706              		.global	tx_buffer
 707              		.global	rx_buffer
 708              		.global	angular_a
 709              		.global	linear_a
 710              		.global	MSG
 711              		.section	.bss.angular_vel,"aw",%nobits
 712              		.align	2
 713              		.set	.LANCHOR13,. + 0
 716              	angular_vel:
 717 0000 00000000 		.space	4
 718              		.section	.bss.data,"aw",%nobits
 719              		.align	2
 722              	data:
 723 0000 00000000 		.space	8
 723      00000000 
 724              		.section	.bss.last_a_vel,"aw",%nobits
 725              		.align	2
 726              		.set	.LANCHOR16,. + 0
 729              	last_a_vel:
 730 0000 00000000 		.space	4
 731              		.section	.bss.last_l_vel,"aw",%nobits
 732              		.align	2
 733              		.set	.LANCHOR15,. + 0
 736              	last_l_vel:
 737 0000 00000000 		.space	4
 738              		.section	.bss.last_rx,"aw",%nobits
 739              		.set	.LANCHOR8,. + 0
 742              	last_rx:
 743 0000 00       		.space	1
 744              		.section	.bss.left_pid_params,"aw",%nobits
 745              		.align	3
 746              		.set	.LANCHOR12,. + 0
 749              	left_pid_params:
 750 0000 00000000 		.space	24
 750      00000000 
 750      00000000 
 750      00000000 
 750      00000000 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 25


 751              		.section	.bss.left_set_speed,"aw",%nobits
 752              		.align	3
 753              		.set	.LANCHOR2,. + 0
 756              	left_set_speed:
 757 0000 00000000 		.space	8
 757      00000000 
 758              		.section	.bss.linear_vel,"aw",%nobits
 759              		.align	2
 760              		.set	.LANCHOR14,. + 0
 763              	linear_vel:
 764 0000 00000000 		.space	4
 765              		.section	.bss.pid_flag,"aw",%nobits
 768              	pid_flag:
 769 0000 00       		.space	1
 770              		.section	.bss.prev_rx,"aw",%nobits
 771              		.set	.LANCHOR7,. + 0
 774              	prev_rx:
 775 0000 00       		.space	1
 776              		.section	.bss.ready_flag,"aw",%nobits
 777              		.set	.LANCHOR4,. + 0
 780              	ready_flag:
 781 0000 00       		.space	1
 782              		.section	.bss.right_set_speed,"aw",%nobits
 783              		.align	3
 784              		.set	.LANCHOR0,. + 0
 787              	right_set_speed:
 788 0000 00000000 		.space	8
 788      00000000 
 789              		.section	.bss.rx_buffer,"aw",%nobits
 790              		.align	2
 791              		.set	.LANCHOR6,. + 0
 794              	rx_buffer:
 795 0000 00000000 		.space	16
 795      00000000 
 795      00000000 
 795      00000000 
 796              		.section	.bss.str_left_motor,"aw",%nobits
 797              		.align	3
 798              		.set	.LANCHOR3,. + 0
 801              	str_left_motor:
 802 0000 00000000 		.space	64
 802      00000000 
 802      00000000 
 802      00000000 
 802      00000000 
 803              		.section	.bss.str_left_pid,"aw",%nobits
 804              		.align	3
 805              		.set	.LANCHOR11,. + 0
 808              	str_left_pid:
 809 0000 00000000 		.space	80
 809      00000000 
 809      00000000 
 809      00000000 
 809      00000000 
 810              		.section	.bss.str_right_motor,"aw",%nobits
 811              		.align	3
 812              		.set	.LANCHOR1,. + 0
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 26


 815              	str_right_motor:
 816 0000 00000000 		.space	64
 816      00000000 
 816      00000000 
 816      00000000 
 816      00000000 
 817              		.section	.bss.str_right_pid,"aw",%nobits
 818              		.align	3
 819              		.set	.LANCHOR9,. + 0
 822              	str_right_pid:
 823 0000 00000000 		.space	80
 823      00000000 
 823      00000000 
 823      00000000 
 823      00000000 
 824              		.section	.bss.tx_buffer,"aw",%nobits
 825              		.align	2
 828              	tx_buffer:
 829 0000 00000000 		.space	16
 829      00000000 
 829      00000000 
 829      00000000 
 830              		.section	.bss.vel_update_flag,"aw",%nobits
 831              		.set	.LANCHOR5,. + 0
 834              	vel_update_flag:
 835 0000 00       		.space	1
 836              		.section	.data.MSG,"aw"
 837              		.align	2
 840              	MSG:
 841 0000 496E6974 		.ascii	"Init\000"
 841      00
 842 0005 00000000 		.space	495
 842      00000000 
 842      00000000 
 842      00000000 
 842      00000000 
 843              		.section	.data.angular_a,"aw"
 844              		.align	2
 847              	angular_a:
 848 0000 0A00     		.ascii	"\012\000"
 849 0002 00000000 		.space	98
 849      00000000 
 849      00000000 
 849      00000000 
 849      00000000 
 850              		.section	.data.linear_a,"aw"
 851              		.align	2
 854              	linear_a:
 855 0000 0A00     		.ascii	"\012\000"
 856 0002 00000000 		.space	98
 856      00000000 
 856      00000000 
 856      00000000 
 856      00000000 
 857              		.section	.data.right_pid_params,"aw"
 858              		.align	3
 859              		.set	.LANCHOR10,. + 0
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 27


 862              	right_pid_params:
 863 0000 00000000 		.word	0
 864 0004 0000FC3F 		.word	1073479680
 865 0008 00000000 		.word	0
 866 000c 0000D03F 		.word	1070596096
 867 0010 00000000 		.word	0
 868 0014 00000000 		.word	0
 869              		.text
 870              	.Letext0:
 871              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 872              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 873              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 874              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 875              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 876              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 877              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 878              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 879              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 880              		.file 12 "Core/Inc/tim.h"
 881              		.file 13 "Core/Inc/usart.h"
 882              		.file 14 "Core/Inc/PID.h"
 883              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 884              		.file 16 "Core/Inc/gpio.h"
 885              		.file 17 "Core/Inc/dma.h"
 886              		.file 18 "Core/Inc/retarget.h"
 887              		.file 19 "Core/Inc/frame_resolve.h"
 888              		.file 20 "<built-in>"
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:16     .text.map_speed:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:24     .text.map_speed:00000000 map_speed
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:46     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:53     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:116    .text.HAL_TIM_PeriodElapsedCallback:00000040 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:125    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:132    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:240    .text.HAL_UART_RxCpltCallback:00000070 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:250    .text.Error_Handler:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:257    .text.Error_Handler:00000000 Error_Handler
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:289    .text.SystemClock_Config:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:296    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:407    .text.main:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:414    .text.main:00000000 main
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:657    .text.main:00000170 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:729    .bss.last_a_vel:00000000 last_a_vel
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:736    .bss.last_l_vel:00000000 last_l_vel
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:716    .bss.angular_vel:00000000 angular_vel
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:763    .bss.linear_vel:00000000 linear_vel
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:834    .bss.vel_update_flag:00000000 vel_update_flag
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:768    .bss.pid_flag:00000000 pid_flag
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:780    .bss.ready_flag:00000000 ready_flag
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:808    .bss.str_left_pid:00000000 str_left_pid
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:801    .bss.str_left_motor:00000000 str_left_motor
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:822    .bss.str_right_pid:00000000 str_right_pid
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:815    .bss.str_right_motor:00000000 str_right_motor
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:749    .bss.left_pid_params:00000000 left_pid_params
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:862    .data.right_pid_params:00000000 right_pid_params
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:756    .bss.left_set_speed:00000000 left_set_speed
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:787    .bss.right_set_speed:00000000 right_set_speed
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:742    .bss.last_rx:00000000 last_rx
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:774    .bss.prev_rx:00000000 prev_rx
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:722    .bss.data:00000000 data
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:828    .bss.tx_buffer:00000000 tx_buffer
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:794    .bss.rx_buffer:00000000 rx_buffer
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:847    .data.angular_a:00000000 angular_a
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:854    .data.linear_a:00000000 linear_a
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:840    .data.MSG:00000000 MSG
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:712    .bss.angular_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:719    .bss.data:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:725    .bss.last_a_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:732    .bss.last_l_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:743    .bss.last_rx:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:745    .bss.left_pid_params:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:752    .bss.left_set_speed:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:759    .bss.linear_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:769    .bss.pid_flag:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:775    .bss.prev_rx:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:781    .bss.ready_flag:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:783    .bss.right_set_speed:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:790    .bss.rx_buffer:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:797    .bss.str_left_motor:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:804    .bss.str_left_pid:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:811    .bss.str_right_motor:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:818    .bss.str_right_pid:00000000 $d
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s 			page 29


C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:825    .bss.tx_buffer:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:835    .bss.vel_update_flag:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:837    .data.MSG:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:844    .data.angular_a:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:851    .data.linear_a:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\cciCsrPL.s:858    .data.right_pid_params:00000000 $d

UNDEFINED SYMBOLS
PID_PreProcess
PID_ComputeOutput
PID_SetDuty
htim1
HAL_UART_Receive_DMA
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_fcmpeq
__aeabi_fmul
__aeabi_fsub
__aeabi_f2d
__aeabi_ddiv
__aeabi_fadd
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
MX_USART1_UART_Init
RetargetInit
PID_MotorInit
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
HAL_TIM_Base_Start_IT
HAL_GetTick
resolveRxFrame
htim4
htim3
htim2
