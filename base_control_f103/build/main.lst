ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.map_speed,"ax",%progbits
  16              		.align	1
  17              		.global	map_speed
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	map_speed:
  25              	.LVL0:
  26              	.LFB70:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdio.h>
  30:Core/Src/main.c **** #include <string.h>
  31:Core/Src/main.c **** #include "stm32f1xx_it.h"
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 2


  32:Core/Src/main.c **** #include "stm32f103xb.h"
  33:Core/Src/main.c **** #include "stm32f1xx_hal.h"
  34:Core/Src/main.c **** #include "PID.h"
  35:Core/Src/main.c **** #include "config.h"
  36:Core/Src/main.c **** #include "frame_resolve.h"
  37:Core/Src/main.c **** #include "retarget.h"
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** #define FALSE   0
  49:Core/Src/main.c **** #define TRUE    1
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** #define DEBUG
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PD */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN PM */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE BEGIN PV */
  63:Core/Src/main.c **** // Arrays
  64:Core/Src/main.c **** uint8_t MSG[500] = "Init";
  65:Core/Src/main.c **** uint8_t linear_a[100] = "\n";
  66:Core/Src/main.c **** uint8_t angular_a[100] = "\n";
  67:Core/Src/main.c **** uint8_t rx_buffer[RX_BUFFER_SIZE];
  68:Core/Src/main.c **** uint8_t tx_buffer[TX_BUFFER_SIZE];
  69:Core/Src/main.c **** uint8_t data[8];
  70:Core/Src/main.c **** uint8_t prev_rx, last_rx;
  71:Core/Src/main.c **** // Cross processes values 
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** #ifdef TEST_HARDWARE
  74:Core/Src/main.c **** volatile uint16_t cnt = 0;
  75:Core/Src/main.c **** volatile uint16_t last_cnt = 0;
  76:Core/Src/main.c **** volatile double enc_cnt = 0.0f;
  77:Core/Src/main.c **** volatile double last_enc_cnt = 0.0f;
  78:Core/Src/main.c **** #endif
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** volatile double right_set_speed = 0.0f; // RPM
  81:Core/Src/main.c **** volatile double left_set_speed = 0.0f; // RPM
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** #ifdef ENABLE_PID
  84:Core/Src/main.c **** /* PID Init Variables */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** double right_pid_params[3] = {RIGHT_MOTOR_KP , RIGHT_MOTOR_KI, RIGHT_MOTOR_KD};
  87:Core/Src/main.c **** double left_pid_params[3] = {LEFT_MOTOR_KP , LEFT_MOTOR_KI, LEFT_MOTOR_KD};
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 3


  89:Core/Src/main.c **** // Custom typedef
  90:Core/Src/main.c **** MOTOR_TypeDef str_right_motor;
  91:Core/Src/main.c **** PID_TypeDef str_right_pid;
  92:Core/Src/main.c **** MOTOR_TypeDef str_left_motor;
  93:Core/Src/main.c **** PID_TypeDef str_left_pid;
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** #endif
  96:Core/Src/main.c **** /* Other definitions*/
  97:Core/Src/main.c **** uint8_t ready_flag = FALSE;
  98:Core/Src/main.c **** volatile uint8_t    vel_update_flag = FALSE;
  99:Core/Src/main.c **** float linear_vel;
 100:Core/Src/main.c **** float angular_vel;
 101:Core/Src/main.c **** float last_l_vel, last_a_vel;
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END PV */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 106:Core/Src/main.c **** void SystemClock_Config(void);
 107:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* USER CODE END PFP */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 112:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END 0 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****   * @brief  The application entry point.
 118:Core/Src/main.c ****   * @retval int
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c **** int main(void)
 121:Core/Src/main.c **** {
 122:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END 1 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 129:Core/Src/main.c ****   HAL_Init();
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END Init */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Configure the system clock */
 136:Core/Src/main.c ****   SystemClock_Config();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END SysInit */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Initialize all configured peripherals */
 143:Core/Src/main.c ****   MX_GPIO_Init();
 144:Core/Src/main.c ****   MX_DMA_Init();
 145:Core/Src/main.c ****   MX_TIM1_Init();
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 4


 146:Core/Src/main.c ****   MX_TIM2_Init();
 147:Core/Src/main.c ****   MX_TIM3_Init();
 148:Core/Src/main.c ****   MX_TIM4_Init();
 149:Core/Src/main.c ****   MX_USART1_UART_Init();
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 151:Core/Src/main.c ****   RetargetInit(&huart1);
 152:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   #ifdef ENABLE_PID
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   PID_MotorInit(&str_right_motor, &str_right_pid, GPIOB, GPIO_PIN_6 , GPIO_PIN_7, 100.0f, 10.0f, &(
 157:Core/Src/main.c ****   PID_MotorInit(&str_left_motor, &str_left_pid, GPIOB, GPIO_PIN_4 , GPIO_PIN_5, 100.0f, 10.0f, &(TI
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   // Start Timer4 for PWM function on channel 3 and channel 4
 160:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 161:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   // Reset PWM Duty Cycle to zero on TIM 4 output channel 3 and channel 4
 164:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_3, 0);
 165:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, 0);
 166:Core/Src/main.c ****   
 167:Core/Src/main.c ****   // Start Timer3 for RIGHT Encoder Interfacing.
 168:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 169:Core/Src/main.c ****   // Start Timer2 for LEFT Encoder Interfacing.
 170:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   // Start Timer1 for control loop interrupt
 173:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   #else 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   //Test PWM
 178:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 1);
 179:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, 0);
 180:Core/Src/main.c ****   // Start Timer4 for PWM function on channel 3 and channel 4
 181:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 182:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 183:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_3, 30);
 184:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, 30);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   //Test control loop
 187:Core/Src/main.c ****   // Start Timer1 for sampling loop interrupt
 188:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 189:Core/Src/main.c ****   
 190:Core/Src/main.c ****   #endif
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   // Last update time in tick
 193:Core/Src/main.c ****   uint32_t last_update = 0;
 194:Core/Src/main.c ****   /* USER CODE END 2 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* Infinite loop */
 197:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 198:Core/Src/main.c ****   while (1)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     /* USER CODE END WHILE */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 5


 203:Core/Src/main.c ****     #ifdef ENABLE_PID
 204:Core/Src/main.c ****     if (vel_update_flag)
 205:Core/Src/main.c ****     {    
 206:Core/Src/main.c ****         resolveRxFrame(rx_buffer, &linear_vel, &angular_vel);
 207:Core/Src/main.c ****         
 208:Core/Src/main.c ****         // Convert from M/S to RPM
 209:Core/Src/main.c ****         left_set_speed = ( linear_vel - angular_vel*ROBOT_WHEEL_BASE/2 ) * 60/ ( PI * ROBOT_WHEEL_D
 210:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****         #ifdef DEBUG
 213:Core/Src/main.c ****         if (linear_vel != last_l_vel || angular_vel != last_a_vel)
 214:Core/Src/main.c ****         {
 215:Core/Src/main.c ****             sprintf((char *)MSG, "R: %.5f | L: %.5f \n", right_set_speed, left_set_speed);
 216:Core/Src/main.c ****             HAL_UART_Transmit_DMA(&huart1 ,MSG, sizeof(MSG));
 217:Core/Src/main.c ****         }
 218:Core/Src/main.c ****         // HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_6);
 219:Core/Src/main.c ****         #endif
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****         last_a_vel = angular_vel;
 222:Core/Src/main.c ****         last_l_vel = linear_vel;
 223:Core/Src/main.c ****         vel_update_flag = FALSE;
 224:Core/Src/main.c ****         last_update = HAL_GetTick();
 225:Core/Src/main.c ****     }
 226:Core/Src/main.c ****     #endif
 227:Core/Src/main.c ****     // else 
 228:Core/Src/main.c ****     // {
 229:Core/Src/main.c ****     //     // If update timeout: 2 seconds
 230:Core/Src/main.c ****     //     // Reset speed to avoid overcontrol
 231:Core/Src/main.c ****     //     if ( (HAL_GetTick() - last_update > COMMAND_TIMEOUT_MS) && (angular_vel != 0 || linear_v
 232:Core/Src/main.c ****     //     {
 233:Core/Src/main.c ****     //         angular_vel = 0;
 234:Core/Src/main.c ****     //         linear_vel = 0;
 235:Core/Src/main.c ****     //         #ifdef DEBUG
 236:Core/Src/main.c ****     //         // printf("Vel : %.5f  | %.5f \n", linear_vel, angular_vel);
 237:Core/Src/main.c ****     //         // sprintf((char *)MSG, "L: %.5f | A: %.5f \n", linear_vel, angular_vel);
 238:Core/Src/main.c ****     //         // HAL_UART_Transmit_DMA(&huart1 ,MSG, sizeof(MSG));
 239:Core/Src/main.c ****     //         #endif
 240:Core/Src/main.c ****     //     }
 241:Core/Src/main.c ****     // }
 242:Core/Src/main.c ****     // HAL_Delay(100);
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   /* USER CODE END 3 */
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief System Clock Configuration
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** void SystemClock_Config(void)
 252:Core/Src/main.c **** {
 253:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 254:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 257:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 258:Core/Src/main.c ****   */
 259:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 6


 260:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 261:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 262:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 263:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 264:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 265:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 266:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 273:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 274:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 275:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 277:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** void map_speed(float a_vel, float l_vel, double *r_set_rpm, double *r_set_lpm)
 288:Core/Src/main.c **** {
  28              		.loc 1 288 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 289:Core/Src/main.c ****     __NOP();
  33              		.loc 1 289 5 view .LVU1
  34              		.syntax unified
  35              	@ 289 "Core/Src/main.c" 1
  36 0000 00BF     		nop
  37              	@ 0 "" 2
 290:Core/Src/main.c **** }
  38              		.loc 1 290 1 is_stmt 0 view .LVU2
  39              		.thumb
  40              		.syntax unified
  41 0002 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE70:
  45              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  46              		.align	1
  47              		.global	HAL_TIM_PeriodElapsedCallback
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	HAL_TIM_PeriodElapsedCallback:
  54              	.LVL1:
  55              	.LFB71:
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 7


 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 294:Core/Src/main.c **** {
  56              		.loc 1 294 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
 295:Core/Src/main.c ****   if (htim == &htim1)
  60              		.loc 1 295 3 view .LVU4
  61              		.loc 1 295 6 is_stmt 0 view .LVU5
  62 0000 0F4B     		ldr	r3, .L9
  63 0002 8342     		cmp	r3, r0
  64 0004 00D0     		beq	.L8
  65 0006 7047     		bx	lr
  66              	.L8:
 294:Core/Src/main.c ****   if (htim == &htim1)
  67              		.loc 1 294 1 view .LVU6
  68 0008 10B5     		push	{r4, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     #ifdef TEST_HARDWARE
 298:Core/Src/main.c ****     // Do sampling and calculate stuff
 299:Core/Src/main.c ****     cnt++;
 300:Core/Src/main.c ****     if (cnt == 100)
 301:Core/Src/main.c ****     {
 302:Core/Src/main.c ****         
 303:Core/Src/main.c ****         enc_cnt = TIM3->CNT;
 304:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_7);
 305:Core/Src/main.c ****         if (enc_cnt!=last_enc_cnt)
 306:Core/Src/main.c ****         {
 307:Core/Src/main.c ****           sprintf((char *)period, "-> %d pulses/sec\n", (enc_cnt-last_enc_cnt));
 308:Core/Src/main.c ****           HAL_UART_Transmit_DMA(&huart1, period, sizeof(period));
 309:Core/Src/main.c ****         }
 310:Core/Src/main.c ****         cnt = 0;
 311:Core/Src/main.c ****         last_enc_cnt = enc_cnt;
 312:Core/Src/main.c ****         
 313:Core/Src/main.c ****     }
 314:Core/Src/main.c ****     #endif
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****     #ifdef ENABLE_PID
 317:Core/Src/main.c ****     /* =================
 318:Core/Src/main.c ****     * MAIN PID CLOSE-LOOP SAMPLING AND COMPUTE
 319:Core/Src/main.c ****     *  =================== */
 320:Core/Src/main.c ****     // RIGHT MOTOR PI CONTROL 
 321:Core/Src/main.c ****     PID_PreProcess(&str_right_motor, right_set_speed);
  73              		.loc 1 321 5 is_stmt 1 view .LVU7
  74 000a 0E4C     		ldr	r4, .L9+4
  75 000c 0E4B     		ldr	r3, .L9+8
  76 000e D3E90023 		ldrd	r2, [r3]
  77 0012 2046     		mov	r0, r4
  78              	.LVL2:
  79              		.loc 1 321 5 is_stmt 0 view .LVU8
  80 0014 FFF7FEFF 		bl	PID_PreProcess
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 8


  81              	.LVL3:
 322:Core/Src/main.c ****     PID_ComputeOutput(&str_right_motor);
  82              		.loc 1 322 5 is_stmt 1 view .LVU9
  83 0018 2046     		mov	r0, r4
  84 001a FFF7FEFF 		bl	PID_ComputeOutput
  85              	.LVL4:
 323:Core/Src/main.c ****     PID_SetDuty(&str_right_motor );
  86              		.loc 1 323 5 view .LVU10
  87 001e 2046     		mov	r0, r4
  88 0020 FFF7FEFF 		bl	PID_SetDuty
  89              	.LVL5:
 324:Core/Src/main.c ****     PID_PreProcess(&str_left_motor, left_set_speed);
  90              		.loc 1 324 5 view .LVU11
  91 0024 094C     		ldr	r4, .L9+12
  92 0026 0A4B     		ldr	r3, .L9+16
  93 0028 D3E90023 		ldrd	r2, [r3]
  94 002c 2046     		mov	r0, r4
  95 002e FFF7FEFF 		bl	PID_PreProcess
  96              	.LVL6:
 325:Core/Src/main.c ****     PID_ComputeOutput(&str_left_motor);
  97              		.loc 1 325 5 view .LVU12
  98 0032 2046     		mov	r0, r4
  99 0034 FFF7FEFF 		bl	PID_ComputeOutput
 100              	.LVL7:
 326:Core/Src/main.c ****     PID_SetDuty(&str_left_motor );
 101              		.loc 1 326 5 view .LVU13
 102 0038 2046     		mov	r0, r4
 103 003a FFF7FEFF 		bl	PID_SetDuty
 104              	.LVL8:
 327:Core/Src/main.c ****     #else 
 328:Core/Src/main.c ****     static uint32_t counter = 0;
 329:Core/Src/main.c ****     if (counter >= 100)
 330:Core/Src/main.c ****     {
 331:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 332:Core/Src/main.c ****       counter = 0;
 333:Core/Src/main.c ****     }
 334:Core/Src/main.c ****     counter++;  
 335:Core/Src/main.c ****     #endif
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c **** }
 105              		.loc 1 337 1 is_stmt 0 view .LVU14
 106 003e 10BD     		pop	{r4, pc}
 107              	.L10:
 108              		.align	2
 109              	.L9:
 110 0040 00000000 		.word	htim1
 111 0044 00000000 		.word	.LANCHOR1
 112 0048 00000000 		.word	.LANCHOR0
 113 004c 00000000 		.word	.LANCHOR3
 114 0050 00000000 		.word	.LANCHOR2
 115              		.cfi_endproc
 116              	.LFE71:
 118              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 119              		.align	1
 120              		.global	HAL_UART_RxCpltCallback
 121              		.syntax unified
 122              		.thumb
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 9


 123              		.thumb_func
 124              		.fpu softvfp
 126              	HAL_UART_RxCpltCallback:
 127              	.LVL9:
 128              	.LFB72:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 341:Core/Src/main.c **** {
 129              		.loc 1 341 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		.loc 1 341 1 is_stmt 0 view .LVU16
 134 0000 08B5     		push	{r3, lr}
 135              	.LCFI1:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
 342:Core/Src/main.c ****     
 343:Core/Src/main.c ****     if (ready_flag == TRUE)
 139              		.loc 1 343 5 is_stmt 1 view .LVU17
 140              		.loc 1 343 20 is_stmt 0 view .LVU18
 141 0002 1B4B     		ldr	r3, .L18
 142 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 143              		.loc 1 343 8 view .LVU19
 144 0006 012B     		cmp	r3, #1
 145 0008 14D0     		beq	.L16
 344:Core/Src/main.c ****     {
 345:Core/Src/main.c ****         vel_update_flag = TRUE;
 346:Core/Src/main.c ****         ready_flag = FALSE;
 347:Core/Src/main.c ****         HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 348:Core/Src/main.c ****     }
 349:Core/Src/main.c ****     else
 350:Core/Src/main.c ****     {
 351:Core/Src/main.c ****         if (rx_buffer[0] == 0x16 && prev_rx == 0x16 && last_rx == 0x16) // SYN
 146              		.loc 1 351 9 is_stmt 1 view .LVU20
 147              		.loc 1 351 22 is_stmt 0 view .LVU21
 148 000a 1A4B     		ldr	r3, .L18+4
 149 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 150              		.loc 1 351 12 view .LVU22
 151 000e 162B     		cmp	r3, #22
 152 0010 03D1     		bne	.L14
 153              		.loc 1 351 45 discriminator 1 view .LVU23
 154 0012 194B     		ldr	r3, .L18+8
 155 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 156              		.loc 1 351 34 discriminator 1 view .LVU24
 157 0016 162B     		cmp	r3, #22
 158 0018 17D0     		beq	.L17
 159              	.L14:
 352:Core/Src/main.c ****         {
 353:Core/Src/main.c ****             ready_flag = TRUE;
 354:Core/Src/main.c ****             memset(rx_buffer, 0, RX_BUFFER_SIZE);
 355:Core/Src/main.c ****             HAL_UART_Receive_DMA(&huart1, rx_buffer, RX_BUFFER_SIZE);   
 356:Core/Src/main.c ****         }
 357:Core/Src/main.c ****         else
 358:Core/Src/main.c ****         {
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 10


 359:Core/Src/main.c ****             HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 160              		.loc 1 359 13 is_stmt 1 view .LVU25
 161 001a 0122     		movs	r2, #1
 162 001c 1549     		ldr	r1, .L18+4
 163 001e 1748     		ldr	r0, .L18+12
 164              	.LVL10:
 165              		.loc 1 359 13 is_stmt 0 view .LVU26
 166 0020 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 167              	.LVL11:
 168              	.L13:
 360:Core/Src/main.c ****         }
 361:Core/Src/main.c ****     } 
 362:Core/Src/main.c ****     last_rx = prev_rx;
 169              		.loc 1 362 5 is_stmt 1 view .LVU27
 170              		.loc 1 362 13 is_stmt 0 view .LVU28
 171 0024 144B     		ldr	r3, .L18+8
 172 0026 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 173 0028 154A     		ldr	r2, .L18+16
 174 002a 1170     		strb	r1, [r2]
 363:Core/Src/main.c ****     prev_rx = rx_buffer[0];
 175              		.loc 1 363 5 is_stmt 1 view .LVU29
 176              		.loc 1 363 24 is_stmt 0 view .LVU30
 177 002c 114A     		ldr	r2, .L18+4
 178 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 179              		.loc 1 363 13 view .LVU31
 180 0030 1A70     		strb	r2, [r3]
 364:Core/Src/main.c **** }
 181              		.loc 1 364 1 view .LVU32
 182 0032 08BD     		pop	{r3, pc}
 183              	.LVL12:
 184              	.L16:
 345:Core/Src/main.c ****         ready_flag = FALSE;
 185              		.loc 1 345 9 is_stmt 1 view .LVU33
 345:Core/Src/main.c ****         ready_flag = FALSE;
 186              		.loc 1 345 25 is_stmt 0 view .LVU34
 187 0034 0122     		movs	r2, #1
 188 0036 134B     		ldr	r3, .L18+20
 189 0038 1A70     		strb	r2, [r3]
 346:Core/Src/main.c ****         HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 190              		.loc 1 346 9 is_stmt 1 view .LVU35
 346:Core/Src/main.c ****         HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 191              		.loc 1 346 20 is_stmt 0 view .LVU36
 192 003a 0D4B     		ldr	r3, .L18
 193 003c 0021     		movs	r1, #0
 194 003e 1970     		strb	r1, [r3]
 347:Core/Src/main.c ****     }
 195              		.loc 1 347 9 is_stmt 1 view .LVU37
 196 0040 0C49     		ldr	r1, .L18+4
 197 0042 0E48     		ldr	r0, .L18+12
 198              	.LVL13:
 347:Core/Src/main.c ****     }
 199              		.loc 1 347 9 is_stmt 0 view .LVU38
 200 0044 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 201              	.LVL14:
 202 0048 ECE7     		b	.L13
 203              	.LVL15:
 204              	.L17:
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 11


 351:Core/Src/main.c ****         {
 205              		.loc 1 351 64 discriminator 2 view .LVU39
 206 004a 0D4B     		ldr	r3, .L18+16
 207 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351:Core/Src/main.c ****         {
 208              		.loc 1 351 53 discriminator 2 view .LVU40
 209 004e 162B     		cmp	r3, #22
 210 0050 E3D1     		bne	.L14
 353:Core/Src/main.c ****             memset(rx_buffer, 0, RX_BUFFER_SIZE);
 211              		.loc 1 353 13 is_stmt 1 view .LVU41
 353:Core/Src/main.c ****             memset(rx_buffer, 0, RX_BUFFER_SIZE);
 212              		.loc 1 353 24 is_stmt 0 view .LVU42
 213 0052 074B     		ldr	r3, .L18
 214 0054 0122     		movs	r2, #1
 215 0056 1A70     		strb	r2, [r3]
 354:Core/Src/main.c ****             HAL_UART_Receive_DMA(&huart1, rx_buffer, RX_BUFFER_SIZE);   
 216              		.loc 1 354 13 is_stmt 1 view .LVU43
 217 0058 0649     		ldr	r1, .L18+4
 218 005a 0023     		movs	r3, #0
 219 005c 0B60     		str	r3, [r1]
 220 005e 4B60     		str	r3, [r1, #4]
 221 0060 8B60     		str	r3, [r1, #8]
 222 0062 CB60     		str	r3, [r1, #12]
 355:Core/Src/main.c ****         }
 223              		.loc 1 355 13 view .LVU44
 224 0064 1022     		movs	r2, #16
 225 0066 0548     		ldr	r0, .L18+12
 226              	.LVL16:
 355:Core/Src/main.c ****         }
 227              		.loc 1 355 13 is_stmt 0 view .LVU45
 228 0068 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 229              	.LVL17:
 230 006c DAE7     		b	.L13
 231              	.L19:
 232 006e 00BF     		.align	2
 233              	.L18:
 234 0070 00000000 		.word	.LANCHOR4
 235 0074 00000000 		.word	.LANCHOR6
 236 0078 00000000 		.word	.LANCHOR7
 237 007c 00000000 		.word	huart1
 238 0080 00000000 		.word	.LANCHOR8
 239 0084 00000000 		.word	.LANCHOR5
 240              		.cfi_endproc
 241              	.LFE72:
 243              		.section	.text.Error_Handler,"ax",%progbits
 244              		.align	1
 245              		.global	Error_Handler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	Error_Handler:
 252              	.LFB73:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE END 4 */
 368:Core/Src/main.c **** 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 12


 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** void Error_Handler(void)
 374:Core/Src/main.c **** {
 253              		.loc 1 374 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ Volatile: function does not return.
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 375:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 376:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 377:Core/Src/main.c ****   __disable_irq();
 259              		.loc 1 377 3 view .LVU47
 260              	.LBB4:
 261              	.LBI4:
 262              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 13


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 14


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 263              		.loc 2 140 27 view .LVU48
 264              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 265              		.loc 2 142 3 view .LVU49
 266              		.syntax unified
 267              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 268 0000 72B6     		cpsid i
 269              	@ 0 "" 2
 270              		.thumb
 271              		.syntax unified
 272              	.L21:
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 15


 273              	.LBE5:
 274              	.LBE4:
 378:Core/Src/main.c ****   while (1)
 275              		.loc 1 378 3 discriminator 1 view .LVU50
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****   }
 276              		.loc 1 380 3 discriminator 1 view .LVU51
 378:Core/Src/main.c ****   while (1)
 277              		.loc 1 378 9 discriminator 1 view .LVU52
 278 0002 FEE7     		b	.L21
 279              		.cfi_endproc
 280              	.LFE73:
 282              		.section	.text.SystemClock_Config,"ax",%progbits
 283              		.align	1
 284              		.global	SystemClock_Config
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	SystemClock_Config:
 291              	.LFB69:
 252:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 292              		.loc 1 252 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 64
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 00B5     		push	{lr}
 297              	.LCFI2:
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 14, -4
 300 0002 91B0     		sub	sp, sp, #68
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 72
 253:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 303              		.loc 1 253 3 view .LVU54
 253:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 304              		.loc 1 253 22 is_stmt 0 view .LVU55
 305 0004 2822     		movs	r2, #40
 306 0006 0021     		movs	r1, #0
 307 0008 06A8     		add	r0, sp, #24
 308 000a FFF7FEFF 		bl	memset
 309              	.LVL18:
 254:Core/Src/main.c **** 
 310              		.loc 1 254 3 is_stmt 1 view .LVU56
 254:Core/Src/main.c **** 
 311              		.loc 1 254 22 is_stmt 0 view .LVU57
 312 000e 0023     		movs	r3, #0
 313 0010 0193     		str	r3, [sp, #4]
 314 0012 0293     		str	r3, [sp, #8]
 315 0014 0393     		str	r3, [sp, #12]
 316 0016 0493     		str	r3, [sp, #16]
 317 0018 0593     		str	r3, [sp, #20]
 259:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 318              		.loc 1 259 3 is_stmt 1 view .LVU58
 259:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 319              		.loc 1 259 36 is_stmt 0 view .LVU59
 320 001a 0122     		movs	r2, #1
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 16


 321 001c 0692     		str	r2, [sp, #24]
 260:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 322              		.loc 1 260 3 is_stmt 1 view .LVU60
 260:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 323              		.loc 1 260 30 is_stmt 0 view .LVU61
 324 001e 4FF48033 		mov	r3, #65536
 325 0022 0793     		str	r3, [sp, #28]
 261:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 326              		.loc 1 261 3 is_stmt 1 view .LVU62
 262:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 327              		.loc 1 262 3 view .LVU63
 262:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 328              		.loc 1 262 30 is_stmt 0 view .LVU64
 329 0024 0A92     		str	r2, [sp, #40]
 263:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 330              		.loc 1 263 3 is_stmt 1 view .LVU65
 263:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 331              		.loc 1 263 34 is_stmt 0 view .LVU66
 332 0026 0222     		movs	r2, #2
 333 0028 0D92     		str	r2, [sp, #52]
 264:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 334              		.loc 1 264 3 is_stmt 1 view .LVU67
 264:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 335              		.loc 1 264 35 is_stmt 0 view .LVU68
 336 002a 0E93     		str	r3, [sp, #56]
 265:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 337              		.loc 1 265 3 is_stmt 1 view .LVU69
 265:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 338              		.loc 1 265 32 is_stmt 0 view .LVU70
 339 002c 4FF4E013 		mov	r3, #1835008
 340 0030 0F93     		str	r3, [sp, #60]
 266:Core/Src/main.c ****   {
 341              		.loc 1 266 3 is_stmt 1 view .LVU71
 266:Core/Src/main.c ****   {
 342              		.loc 1 266 7 is_stmt 0 view .LVU72
 343 0032 06A8     		add	r0, sp, #24
 344 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 345              	.LVL19:
 266:Core/Src/main.c ****   {
 346              		.loc 1 266 6 view .LVU73
 347 0038 80B9     		cbnz	r0, .L26
 272:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 348              		.loc 1 272 3 is_stmt 1 view .LVU74
 272:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 349              		.loc 1 272 31 is_stmt 0 view .LVU75
 350 003a 0F23     		movs	r3, #15
 351 003c 0193     		str	r3, [sp, #4]
 274:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 352              		.loc 1 274 3 is_stmt 1 view .LVU76
 274:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 353              		.loc 1 274 34 is_stmt 0 view .LVU77
 354 003e 0221     		movs	r1, #2
 355 0040 0291     		str	r1, [sp, #8]
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 356              		.loc 1 275 3 is_stmt 1 view .LVU78
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 357              		.loc 1 275 35 is_stmt 0 view .LVU79
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 17


 358 0042 0023     		movs	r3, #0
 359 0044 0393     		str	r3, [sp, #12]
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 360              		.loc 1 276 3 is_stmt 1 view .LVU80
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 276 36 is_stmt 0 view .LVU81
 362 0046 4FF48062 		mov	r2, #1024
 363 004a 0492     		str	r2, [sp, #16]
 277:Core/Src/main.c **** 
 364              		.loc 1 277 3 is_stmt 1 view .LVU82
 277:Core/Src/main.c **** 
 365              		.loc 1 277 36 is_stmt 0 view .LVU83
 366 004c 0593     		str	r3, [sp, #20]
 279:Core/Src/main.c ****   {
 367              		.loc 1 279 3 is_stmt 1 view .LVU84
 279:Core/Src/main.c ****   {
 368              		.loc 1 279 7 is_stmt 0 view .LVU85
 369 004e 01A8     		add	r0, sp, #4
 370 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 371              	.LVL20:
 279:Core/Src/main.c ****   {
 372              		.loc 1 279 6 view .LVU86
 373 0054 20B9     		cbnz	r0, .L27
 283:Core/Src/main.c **** 
 374              		.loc 1 283 1 view .LVU87
 375 0056 11B0     		add	sp, sp, #68
 376              	.LCFI4:
 377              		.cfi_remember_state
 378              		.cfi_def_cfa_offset 4
 379              		@ sp needed
 380 0058 5DF804FB 		ldr	pc, [sp], #4
 381              	.L26:
 382              	.LCFI5:
 383              		.cfi_restore_state
 268:Core/Src/main.c ****   }
 384              		.loc 1 268 5 is_stmt 1 view .LVU88
 385 005c FFF7FEFF 		bl	Error_Handler
 386              	.LVL21:
 387              	.L27:
 281:Core/Src/main.c ****   }
 388              		.loc 1 281 5 view .LVU89
 389 0060 FFF7FEFF 		bl	Error_Handler
 390              	.LVL22:
 391              		.cfi_endproc
 392              	.LFE69:
 394              		.global	__aeabi_fmul
 395              		.global	__aeabi_fsub
 396              		.global	__aeabi_f2d
 397              		.global	__aeabi_ddiv
 398              		.global	__aeabi_fadd
 399              		.global	__aeabi_fcmpeq
 400              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 401              		.align	2
 402              	.LC0:
 403 0000 523A2025 		.ascii	"R: %.5f | L: %.5f \012\000"
 403      2E356620 
 403      7C204C3A 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 18


 403      20252E35 
 403      66200A00 
 404              		.section	.text.main,"ax",%progbits
 405              		.align	1
 406              		.global	main
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu softvfp
 412              	main:
 413              	.LFB68:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 414              		.loc 1 121 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 419              	.LCFI6:
 420              		.cfi_def_cfa_offset 28
 421              		.cfi_offset 4, -28
 422              		.cfi_offset 5, -24
 423              		.cfi_offset 6, -20
 424              		.cfi_offset 7, -16
 425              		.cfi_offset 8, -12
 426              		.cfi_offset 9, -8
 427              		.cfi_offset 14, -4
 428 0004 8BB0     		sub	sp, sp, #44
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 72
 129:Core/Src/main.c **** 
 431              		.loc 1 129 3 view .LVU91
 432 0006 FFF7FEFF 		bl	HAL_Init
 433              	.LVL23:
 136:Core/Src/main.c **** 
 434              		.loc 1 136 3 view .LVU92
 435 000a FFF7FEFF 		bl	SystemClock_Config
 436              	.LVL24:
 143:Core/Src/main.c ****   MX_DMA_Init();
 437              		.loc 1 143 3 view .LVU93
 438 000e FFF7FEFF 		bl	MX_GPIO_Init
 439              	.LVL25:
 144:Core/Src/main.c ****   MX_TIM1_Init();
 440              		.loc 1 144 3 view .LVU94
 441 0012 FFF7FEFF 		bl	MX_DMA_Init
 442              	.LVL26:
 145:Core/Src/main.c ****   MX_TIM2_Init();
 443              		.loc 1 145 3 view .LVU95
 444 0016 FFF7FEFF 		bl	MX_TIM1_Init
 445              	.LVL27:
 146:Core/Src/main.c ****   MX_TIM3_Init();
 446              		.loc 1 146 3 view .LVU96
 447 001a FFF7FEFF 		bl	MX_TIM2_Init
 448              	.LVL28:
 147:Core/Src/main.c ****   MX_TIM4_Init();
 449              		.loc 1 147 3 view .LVU97
 450 001e FFF7FEFF 		bl	MX_TIM3_Init
 451              	.LVL29:
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 19


 148:Core/Src/main.c ****   MX_USART1_UART_Init();
 452              		.loc 1 148 3 view .LVU98
 453 0022 FFF7FEFF 		bl	MX_TIM4_Init
 454              	.LVL30:
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 455              		.loc 1 149 3 view .LVU99
 456 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 457              	.LVL31:
 151:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, rx_buffer, 1);
 458              		.loc 1 151 3 view .LVU100
 459 002a 5D4C     		ldr	r4, .L35+8
 460 002c 2046     		mov	r0, r4
 461 002e FFF7FEFF 		bl	RetargetInit
 462              	.LVL32:
 152:Core/Src/main.c **** 
 463              		.loc 1 152 3 view .LVU101
 464 0032 0122     		movs	r2, #1
 465 0034 5B49     		ldr	r1, .L35+12
 466 0036 2046     		mov	r0, r4
 467 0038 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 468              	.LVL33:
 156:Core/Src/main.c ****   PID_MotorInit(&str_left_motor, &str_left_pid, GPIOB, GPIO_PIN_4 , GPIO_PIN_5, 100.0f, 10.0f, &(TI
 469              		.loc 1 156 3 view .LVU102
 470 003c 5A4C     		ldr	r4, .L35+16
 471 003e 5B4B     		ldr	r3, .L35+20
 472 0040 0893     		str	r3, [sp, #32]
 473 0042 5B4B     		ldr	r3, .L35+24
 474 0044 0793     		str	r3, [sp, #28]
 475 0046 A3F58363 		sub	r3, r3, #1048
 476 004a 0693     		str	r3, [sp, #24]
 477 004c 4FF00008 		mov	r8, #0
 478 0050 DFF86091 		ldr	r9, .L35+28
 479 0054 CDE90489 		strd	r8, [sp, #16]
 480 0058 0026     		movs	r6, #0
 481 005a 574F     		ldr	r7, .L35+32
 482 005c CDE90267 		strd	r6, [sp, #8]
 483 0060 8023     		movs	r3, #128
 484 0062 0093     		str	r3, [sp]
 485 0064 4023     		movs	r3, #64
 486 0066 2246     		mov	r2, r4
 487 0068 5449     		ldr	r1, .L35+36
 488 006a 5548     		ldr	r0, .L35+40
 489 006c FFF7FEFF 		bl	PID_MotorInit
 490              	.LVL34:
 157:Core/Src/main.c **** 
 491              		.loc 1 157 3 view .LVU103
 492 0070 544B     		ldr	r3, .L35+44
 493 0072 0893     		str	r3, [sp, #32]
 494 0074 544B     		ldr	r3, .L35+48
 495 0076 0793     		str	r3, [sp, #28]
 496 0078 A3F61C03 		subw	r3, r3, #2076
 497 007c 0693     		str	r3, [sp, #24]
 498 007e CDE90489 		strd	r8, [sp, #16]
 499 0082 CDE90267 		strd	r6, [sp, #8]
 500 0086 2023     		movs	r3, #32
 501 0088 0093     		str	r3, [sp]
 502 008a 1023     		movs	r3, #16
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 20


 503 008c 2246     		mov	r2, r4
 504 008e 4F49     		ldr	r1, .L35+52
 505 0090 4F48     		ldr	r0, .L35+56
 506 0092 FFF7FEFF 		bl	PID_MotorInit
 507              	.LVL35:
 160:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 508              		.loc 1 160 3 view .LVU104
 509 0096 4F4C     		ldr	r4, .L35+60
 510 0098 0821     		movs	r1, #8
 511 009a 2046     		mov	r0, r4
 512 009c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 513              	.LVL36:
 161:Core/Src/main.c **** 
 514              		.loc 1 161 3 view .LVU105
 515 00a0 0C21     		movs	r1, #12
 516 00a2 2046     		mov	r0, r4
 517 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 518              	.LVL37:
 164:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, 0);
 519              		.loc 1 164 3 view .LVU106
 520 00a8 2368     		ldr	r3, [r4]
 521 00aa 0022     		movs	r2, #0
 522 00ac DA63     		str	r2, [r3, #60]
 165:Core/Src/main.c ****   
 523              		.loc 1 165 3 view .LVU107
 524 00ae 1A64     		str	r2, [r3, #64]
 168:Core/Src/main.c ****   // Start Timer2 for LEFT Encoder Interfacing.
 525              		.loc 1 168 3 view .LVU108
 526 00b0 3C21     		movs	r1, #60
 527 00b2 4948     		ldr	r0, .L35+64
 528 00b4 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 529              	.LVL38:
 170:Core/Src/main.c **** 
 530              		.loc 1 170 3 view .LVU109
 531 00b8 3C21     		movs	r1, #60
 532 00ba 4848     		ldr	r0, .L35+68
 533 00bc FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 534              	.LVL39:
 173:Core/Src/main.c **** 
 535              		.loc 1 173 3 view .LVU110
 536 00c0 4748     		ldr	r0, .L35+72
 537 00c2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 538              	.LVL40:
 193:Core/Src/main.c ****   /* USER CODE END 2 */
 539              		.loc 1 193 3 view .LVU111
 193:Core/Src/main.c ****   /* USER CODE END 2 */
 540              		.loc 1 193 3 is_stmt 0 view .LVU112
 541 00c6 1FE0     		b	.L29
 542              	.LVL41:
 543              	.L30:
 215:Core/Src/main.c ****             HAL_UART_Transmit_DMA(&huart1 ,MSG, sizeof(MSG));
 544              		.loc 1 215 13 is_stmt 1 view .LVU113
 545 00c8 464B     		ldr	r3, .L35+76
 546 00ca D3E90023 		ldrd	r2, [r3]
 547 00ce 4649     		ldr	r1, .L35+80
 548 00d0 D1E90001 		ldrd	r0, [r1]
 549 00d4 454C     		ldr	r4, .L35+84
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 21


 550 00d6 CDE90001 		strd	r0, [sp]
 551 00da 4549     		ldr	r1, .L35+88
 552 00dc 2046     		mov	r0, r4
 553 00de FFF7FEFF 		bl	sprintf
 554              	.LVL42:
 216:Core/Src/main.c ****         }
 555              		.loc 1 216 13 view .LVU114
 556 00e2 4FF4FA72 		mov	r2, #500
 557 00e6 2146     		mov	r1, r4
 558 00e8 2D48     		ldr	r0, .L35+8
 559 00ea FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 560              	.LVL43:
 561              	.L31:
 221:Core/Src/main.c ****         last_l_vel = linear_vel;
 562              		.loc 1 221 9 view .LVU115
 221:Core/Src/main.c ****         last_l_vel = linear_vel;
 563              		.loc 1 221 20 is_stmt 0 view .LVU116
 564 00ee 414B     		ldr	r3, .L35+92
 565 00f0 1A68     		ldr	r2, [r3]	@ float
 566 00f2 414B     		ldr	r3, .L35+96
 567 00f4 1A60     		str	r2, [r3]	@ float
 222:Core/Src/main.c ****         vel_update_flag = FALSE;
 568              		.loc 1 222 9 is_stmt 1 view .LVU117
 222:Core/Src/main.c ****         vel_update_flag = FALSE;
 569              		.loc 1 222 20 is_stmt 0 view .LVU118
 570 00f6 414B     		ldr	r3, .L35+100
 571 00f8 1A68     		ldr	r2, [r3]	@ float
 572 00fa 414B     		ldr	r3, .L35+104
 573 00fc 1A60     		str	r2, [r3]	@ float
 223:Core/Src/main.c ****         last_update = HAL_GetTick();
 574              		.loc 1 223 9 is_stmt 1 view .LVU119
 223:Core/Src/main.c ****         last_update = HAL_GetTick();
 575              		.loc 1 223 25 is_stmt 0 view .LVU120
 576 00fe 414B     		ldr	r3, .L35+108
 577 0100 0022     		movs	r2, #0
 578 0102 1A70     		strb	r2, [r3]
 224:Core/Src/main.c ****     }
 579              		.loc 1 224 9 is_stmt 1 view .LVU121
 224:Core/Src/main.c ****     }
 580              		.loc 1 224 23 is_stmt 0 view .LVU122
 581 0104 FFF7FEFF 		bl	HAL_GetTick
 582              	.LVL44:
 583              	.L29:
 198:Core/Src/main.c ****   {
 584              		.loc 1 198 3 is_stmt 1 view .LVU123
 204:Core/Src/main.c ****     {    
 585              		.loc 1 204 5 view .LVU124
 204:Core/Src/main.c ****     {    
 586              		.loc 1 204 9 is_stmt 0 view .LVU125
 587 0108 3E4B     		ldr	r3, .L35+108
 588 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204:Core/Src/main.c ****     {    
 589              		.loc 1 204 8 view .LVU126
 590 010c 002B     		cmp	r3, #0
 591 010e FBD0     		beq	.L29
 206:Core/Src/main.c ****         
 592              		.loc 1 206 9 is_stmt 1 view .LVU127
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 22


 593 0110 384C     		ldr	r4, .L35+92
 594 0112 3A4D     		ldr	r5, .L35+100
 595 0114 2246     		mov	r2, r4
 596 0116 2946     		mov	r1, r5
 597 0118 2248     		ldr	r0, .L35+12
 598 011a FFF7FEFF 		bl	resolveRxFrame
 599              	.LVL45:
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 600              		.loc 1 209 9 view .LVU128
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 601              		.loc 1 209 39 is_stmt 0 view .LVU129
 602 011e 2D68     		ldr	r5, [r5]	@ float
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 603              		.loc 1 209 52 view .LVU130
 604 0120 2668     		ldr	r6, [r4]	@ float
 605 0122 3949     		ldr	r1, .L35+112
 606 0124 3046     		mov	r0, r6
 607 0126 FFF7FEFF 		bl	__aeabi_fmul
 608              	.LVL46:
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 609              		.loc 1 209 69 view .LVU131
 610 012a 4FF07C51 		mov	r1, #1056964608
 611 012e FFF7FEFF 		bl	__aeabi_fmul
 612              	.LVL47:
 613 0132 0446     		mov	r4, r0
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 614              		.loc 1 209 39 view .LVU132
 615 0134 0146     		mov	r1, r0
 616 0136 2846     		mov	r0, r5
 617 0138 FFF7FEFF 		bl	__aeabi_fsub
 618              	.LVL48:
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 619              		.loc 1 209 74 view .LVU133
 620 013c 3349     		ldr	r1, .L35+116
 621 013e FFF7FEFF 		bl	__aeabi_fmul
 622              	.LVL49:
 623 0142 FFF7FEFF 		bl	__aeabi_f2d
 624              	.LVL50:
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 625              		.loc 1 209 78 view .LVU134
 626 0146 14A3     		adr	r3, .L35
 627 0148 D3E90023 		ldrd	r2, [r3]
 628 014c FFF7FEFF 		bl	__aeabi_ddiv
 629              	.LVL51:
 209:Core/Src/main.c ****         right_set_speed = ( linear_vel + angular_vel*ROBOT_WHEEL_BASE/2) * 60/ ( PI * ROBOT_WHEEL_D
 630              		.loc 1 209 24 view .LVU135
 631 0150 254B     		ldr	r3, .L35+80
 632 0152 C3E90001 		strd	r0, [r3]
 210:Core/Src/main.c **** 
 633              		.loc 1 210 9 is_stmt 1 view .LVU136
 210:Core/Src/main.c **** 
 634              		.loc 1 210 40 is_stmt 0 view .LVU137
 635 0156 2146     		mov	r1, r4
 636 0158 2846     		mov	r0, r5
 637 015a FFF7FEFF 		bl	__aeabi_fadd
 638              	.LVL52:
 210:Core/Src/main.c **** 
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 23


 639              		.loc 1 210 74 view .LVU138
 640 015e 2B49     		ldr	r1, .L35+116
 641 0160 FFF7FEFF 		bl	__aeabi_fmul
 642              	.LVL53:
 643 0164 FFF7FEFF 		bl	__aeabi_f2d
 644              	.LVL54:
 210:Core/Src/main.c **** 
 645              		.loc 1 210 78 view .LVU139
 646 0168 0BA3     		adr	r3, .L35
 647 016a D3E90023 		ldrd	r2, [r3]
 648 016e FFF7FEFF 		bl	__aeabi_ddiv
 649              	.LVL55:
 210:Core/Src/main.c **** 
 650              		.loc 1 210 25 view .LVU140
 651 0172 1C4B     		ldr	r3, .L35+76
 652 0174 C3E90001 		strd	r0, [r3]
 213:Core/Src/main.c ****         {
 653              		.loc 1 213 9 is_stmt 1 view .LVU141
 213:Core/Src/main.c ****         {
 654              		.loc 1 213 12 is_stmt 0 view .LVU142
 655 0178 214B     		ldr	r3, .L35+104
 656 017a 1968     		ldr	r1, [r3]	@ float
 657 017c 2846     		mov	r0, r5
 658 017e FFF7FEFF 		bl	__aeabi_fcmpeq
 659              	.LVL56:
 660 0182 0028     		cmp	r0, #0
 661 0184 A0D0     		beq	.L30
 213:Core/Src/main.c ****         {
 662              		.loc 1 213 38 discriminator 1 view .LVU143
 663 0186 1C4B     		ldr	r3, .L35+96
 664 0188 1968     		ldr	r1, [r3]	@ float
 665 018a 3046     		mov	r0, r6
 666 018c FFF7FEFF 		bl	__aeabi_fcmpeq
 667              	.LVL57:
 668 0190 0028     		cmp	r0, #0
 669 0192 ACD1     		bne	.L31
 670 0194 98E7     		b	.L30
 671              	.L36:
 672 0196 00BF     		.align	3
 673              	.L35:
 674 0198 DCE14F3D 		.word	1028645340
 675 019c 5723CA3F 		.word	1070211927
 676 01a0 00000000 		.word	huart1
 677 01a4 00000000 		.word	.LANCHOR6
 678 01a8 000C0140 		.word	1073810432
 679 01ac 00000000 		.word	.LANCHOR10
 680 01b0 3C080040 		.word	1073743932
 681 01b4 00002440 		.word	1076101120
 682 01b8 00005940 		.word	1079574528
 683 01bc 00000000 		.word	.LANCHOR9
 684 01c0 00000000 		.word	.LANCHOR1
 685 01c4 00000000 		.word	.LANCHOR12
 686 01c8 40080040 		.word	1073743936
 687 01cc 00000000 		.word	.LANCHOR11
 688 01d0 00000000 		.word	.LANCHOR3
 689 01d4 00000000 		.word	htim4
 690 01d8 00000000 		.word	htim3
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 24


 691 01dc 00000000 		.word	htim2
 692 01e0 00000000 		.word	htim1
 693 01e4 00000000 		.word	.LANCHOR0
 694 01e8 00000000 		.word	.LANCHOR2
 695 01ec 00000000 		.word	.LANCHOR17
 696 01f0 00000000 		.word	.LC0
 697 01f4 00000000 		.word	.LANCHOR13
 698 01f8 00000000 		.word	.LANCHOR16
 699 01fc 00000000 		.word	.LANCHOR14
 700 0200 00000000 		.word	.LANCHOR15
 701 0204 00000000 		.word	.LANCHOR5
 702 0208 85EB513E 		.word	1045556101
 703 020c 00007042 		.word	1114636288
 704              		.cfi_endproc
 705              	.LFE68:
 707              		.global	last_a_vel
 708              		.global	last_l_vel
 709              		.global	angular_vel
 710              		.global	linear_vel
 711              		.global	vel_update_flag
 712              		.global	ready_flag
 713              		.global	str_left_pid
 714              		.global	str_left_motor
 715              		.global	str_right_pid
 716              		.global	str_right_motor
 717              		.global	left_pid_params
 718              		.global	right_pid_params
 719              		.global	left_set_speed
 720              		.global	right_set_speed
 721              		.global	last_rx
 722              		.global	prev_rx
 723              		.global	data
 724              		.global	tx_buffer
 725              		.global	rx_buffer
 726              		.global	angular_a
 727              		.global	linear_a
 728              		.global	MSG
 729              		.section	.bss.angular_vel,"aw",%nobits
 730              		.align	2
 731              		.set	.LANCHOR13,. + 0
 734              	angular_vel:
 735 0000 00000000 		.space	4
 736              		.section	.bss.data,"aw",%nobits
 737              		.align	2
 740              	data:
 741 0000 00000000 		.space	8
 741      00000000 
 742              		.section	.bss.last_a_vel,"aw",%nobits
 743              		.align	2
 744              		.set	.LANCHOR16,. + 0
 747              	last_a_vel:
 748 0000 00000000 		.space	4
 749              		.section	.bss.last_l_vel,"aw",%nobits
 750              		.align	2
 751              		.set	.LANCHOR15,. + 0
 754              	last_l_vel:
 755 0000 00000000 		.space	4
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 25


 756              		.section	.bss.last_rx,"aw",%nobits
 757              		.set	.LANCHOR8,. + 0
 760              	last_rx:
 761 0000 00       		.space	1
 762              		.section	.bss.left_set_speed,"aw",%nobits
 763              		.align	3
 764              		.set	.LANCHOR2,. + 0
 767              	left_set_speed:
 768 0000 00000000 		.space	8
 768      00000000 
 769              		.section	.bss.linear_vel,"aw",%nobits
 770              		.align	2
 771              		.set	.LANCHOR14,. + 0
 774              	linear_vel:
 775 0000 00000000 		.space	4
 776              		.section	.bss.prev_rx,"aw",%nobits
 777              		.set	.LANCHOR7,. + 0
 780              	prev_rx:
 781 0000 00       		.space	1
 782              		.section	.bss.ready_flag,"aw",%nobits
 783              		.set	.LANCHOR4,. + 0
 786              	ready_flag:
 787 0000 00       		.space	1
 788              		.section	.bss.right_set_speed,"aw",%nobits
 789              		.align	3
 790              		.set	.LANCHOR0,. + 0
 793              	right_set_speed:
 794 0000 00000000 		.space	8
 794      00000000 
 795              		.section	.bss.rx_buffer,"aw",%nobits
 796              		.align	2
 797              		.set	.LANCHOR6,. + 0
 800              	rx_buffer:
 801 0000 00000000 		.space	16
 801      00000000 
 801      00000000 
 801      00000000 
 802              		.section	.bss.str_left_motor,"aw",%nobits
 803              		.align	3
 804              		.set	.LANCHOR3,. + 0
 807              	str_left_motor:
 808 0000 00000000 		.space	64
 808      00000000 
 808      00000000 
 808      00000000 
 808      00000000 
 809              		.section	.bss.str_left_pid,"aw",%nobits
 810              		.align	3
 811              		.set	.LANCHOR11,. + 0
 814              	str_left_pid:
 815 0000 00000000 		.space	64
 815      00000000 
 815      00000000 
 815      00000000 
 815      00000000 
 816              		.section	.bss.str_right_motor,"aw",%nobits
 817              		.align	3
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 26


 818              		.set	.LANCHOR1,. + 0
 821              	str_right_motor:
 822 0000 00000000 		.space	64
 822      00000000 
 822      00000000 
 822      00000000 
 822      00000000 
 823              		.section	.bss.str_right_pid,"aw",%nobits
 824              		.align	3
 825              		.set	.LANCHOR9,. + 0
 828              	str_right_pid:
 829 0000 00000000 		.space	64
 829      00000000 
 829      00000000 
 829      00000000 
 829      00000000 
 830              		.section	.bss.tx_buffer,"aw",%nobits
 831              		.align	2
 834              	tx_buffer:
 835 0000 00000000 		.space	16
 835      00000000 
 835      00000000 
 835      00000000 
 836              		.section	.bss.vel_update_flag,"aw",%nobits
 837              		.set	.LANCHOR5,. + 0
 840              	vel_update_flag:
 841 0000 00       		.space	1
 842              		.section	.data.MSG,"aw"
 843              		.align	2
 844              		.set	.LANCHOR17,. + 0
 847              	MSG:
 848 0000 496E6974 		.ascii	"Init\000"
 848      00
 849 0005 00000000 		.space	495
 849      00000000 
 849      00000000 
 849      00000000 
 849      00000000 
 850              		.section	.data.angular_a,"aw"
 851              		.align	2
 854              	angular_a:
 855 0000 0A00     		.ascii	"\012\000"
 856 0002 00000000 		.space	98
 856      00000000 
 856      00000000 
 856      00000000 
 856      00000000 
 857              		.section	.data.left_pid_params,"aw"
 858              		.align	3
 859              		.set	.LANCHOR12,. + 0
 862              	left_pid_params:
 863 0000 00000000 		.word	0
 864 0004 00003040 		.word	1076887552
 865 0008 00000000 		.word	0
 866 000c 0000E03F 		.word	1071644672
 867 0010 00000000 		.word	0
 868 0014 00000000 		.word	0
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 27


 869              		.section	.data.linear_a,"aw"
 870              		.align	2
 873              	linear_a:
 874 0000 0A00     		.ascii	"\012\000"
 875 0002 00000000 		.space	98
 875      00000000 
 875      00000000 
 875      00000000 
 875      00000000 
 876              		.section	.data.right_pid_params,"aw"
 877              		.align	3
 878              		.set	.LANCHOR10,. + 0
 881              	right_pid_params:
 882 0000 00000000 		.word	0
 883 0004 00003040 		.word	1076887552
 884 0008 00000000 		.word	0
 885 000c 0000E03F 		.word	1071644672
 886 0010 00000000 		.word	0
 887 0014 00000000 		.word	0
 888              		.text
 889              	.Letext0:
 890              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 891              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 892              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 893              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 894              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 895              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 896              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 897              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 898              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 899              		.file 12 "Core/Inc/tim.h"
 900              		.file 13 "Core/Inc/usart.h"
 901              		.file 14 "Core/Inc/PID.h"
 902              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 903              		.file 16 "Core/Inc/gpio.h"
 904              		.file 17 "Core/Inc/dma.h"
 905              		.file 18 "Core/Inc/retarget.h"
 906              		.file 19 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 907              		.file 20 "Core/Inc/frame_resolve.h"
 908              		.file 21 "<built-in>"
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:16     .text.map_speed:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:24     .text.map_speed:00000000 map_speed
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:46     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:53     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:110    .text.HAL_TIM_PeriodElapsedCallback:00000040 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:119    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:126    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:234    .text.HAL_UART_RxCpltCallback:00000070 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:244    .text.Error_Handler:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:251    .text.Error_Handler:00000000 Error_Handler
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:283    .text.SystemClock_Config:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:290    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:401    .rodata.main.str1.4:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:405    .text.main:00000000 $t
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:412    .text.main:00000000 main
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:674    .text.main:00000198 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:747    .bss.last_a_vel:00000000 last_a_vel
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:754    .bss.last_l_vel:00000000 last_l_vel
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:734    .bss.angular_vel:00000000 angular_vel
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:774    .bss.linear_vel:00000000 linear_vel
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:840    .bss.vel_update_flag:00000000 vel_update_flag
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:786    .bss.ready_flag:00000000 ready_flag
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:814    .bss.str_left_pid:00000000 str_left_pid
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:807    .bss.str_left_motor:00000000 str_left_motor
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:828    .bss.str_right_pid:00000000 str_right_pid
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:821    .bss.str_right_motor:00000000 str_right_motor
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:862    .data.left_pid_params:00000000 left_pid_params
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:881    .data.right_pid_params:00000000 right_pid_params
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:767    .bss.left_set_speed:00000000 left_set_speed
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:793    .bss.right_set_speed:00000000 right_set_speed
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:760    .bss.last_rx:00000000 last_rx
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:780    .bss.prev_rx:00000000 prev_rx
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:740    .bss.data:00000000 data
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:834    .bss.tx_buffer:00000000 tx_buffer
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:800    .bss.rx_buffer:00000000 rx_buffer
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:854    .data.angular_a:00000000 angular_a
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:873    .data.linear_a:00000000 linear_a
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:847    .data.MSG:00000000 MSG
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:730    .bss.angular_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:737    .bss.data:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:743    .bss.last_a_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:750    .bss.last_l_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:761    .bss.last_rx:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:763    .bss.left_set_speed:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:770    .bss.linear_vel:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:781    .bss.prev_rx:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:787    .bss.ready_flag:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:789    .bss.right_set_speed:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:796    .bss.rx_buffer:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:803    .bss.str_left_motor:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:810    .bss.str_left_pid:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:817    .bss.str_right_motor:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:824    .bss.str_right_pid:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:831    .bss.tx_buffer:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:841    .bss.vel_update_flag:00000000 $d
ARM GAS  C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s 			page 29


C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:843    .data.MSG:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:851    .data.angular_a:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:858    .data.left_pid_params:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:870    .data.linear_a:00000000 $d
C:\Users\Duy_Linh\AppData\Local\Temp\ccSmGDMj.s:877    .data.right_pid_params:00000000 $d

UNDEFINED SYMBOLS
PID_PreProcess
PID_ComputeOutput
PID_SetDuty
htim1
HAL_UART_Receive_DMA
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_fmul
__aeabi_fsub
__aeabi_f2d
__aeabi_ddiv
__aeabi_fadd
__aeabi_fcmpeq
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
MX_USART1_UART_Init
RetargetInit
PID_MotorInit
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
HAL_TIM_Base_Start_IT
sprintf
HAL_UART_Transmit_DMA
HAL_GetTick
resolveRxFrame
htim4
htim3
htim2
